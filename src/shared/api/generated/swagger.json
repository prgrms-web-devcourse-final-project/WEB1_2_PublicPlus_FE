{
  "openapi": "3.0.1",
  "info": {
    "title": "PublicPlus",
    "description": "공공체육시설 활성화 사이트 공공플러스입니다!",
    "contact": {
      "name": "데브코스 통합 파이널 프로젝트 11팀 00+ 백엔드 깃허브 채널",
      "url": "https://github.com/prgrms-web-devcourse-final-project/WEB1_2_PublicPlus_BE"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Activity ParticipantsController ",
      "description": "모임 참가자에 대한 컨트롤러 입니다"
    },
    {
      "name": "ChatRoom Controller",
      "description": "채팅방 관련 API"
    },
    {
      "name": "Message Controller",
      "description": "채팅 메시지 관련 API"
    },
    {
      "name": "EmailController",
      "description": "이메일 인증메일을 보내거나 이메일에 대한 확인 검증을 합니다"
    },
    {
      "name": "FacilityController",
      "description": "FacilitySearch and FacilityDetailPage API"
    },
    {
      "name": "UserController",
      "description": "사용자 관련 처리를 하는 컨트롤러입니다(회원가입,로그인,로그아웃,토큰 등등)"
    },
    {
      "name": "Chat Participant Controller",
      "description": "채팅 참가자 관련 API"
    },
    {
      "name": "Activity-MeetingBoard Controller",
      "description": "모임과 모임게시판을 연결시켜 관리하는 api 입니다"
    },
    {
      "name": "Meeting Board",
      "description": "모임 게시판 관련 API"
    },
    {
      "name": "ActivityController",
      "description": "About googleCalendar And Activity API"
    },
    {
      "name": "facility-Like Controller",
      "description": "시설의 좋아요를 관리하는 컨트롤러입니다"
    },
    {
      "name": "OAuth2Controller",
      "description": "소셜 로그인 기능을 이용해 로그인합니다(스웨거로는 테스트 불가)"
    }
  ],
  "paths": {
    "/api/meetingboard/{mbId}": {
      "get": {
        "tags": ["Meeting Board"],
        "summary": "모임 상세 조회",
        "description": "특정 ID의 모임을 조회합니다.",
        "operationId": "getMeetingBoardById",
        "parameters": [
          {
            "name": "mbId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "모임을 찾을 수 없습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "서버 내부 오류",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Meeting Board"],
        "summary": "모임 수정",
        "description": "특정 ID의 모임 정보를 수정합니다.",
        "operationId": "updateMeetingBoard",
        "parameters": [
          {
            "name": "mbId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingBoardRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "수정 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "유효하지 않은 요청 데이터",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "수정 권한 없음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "모임을 찾을 수 없음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Meeting Board"],
        "summary": "모임 삭제",
        "description": "특정 ID의 모임 정보를 삭제합니다.",
        "operationId": "deleteMeetingBoard",
        "parameters": [
          {
            "name": "mbId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "삭제 성공"
          },
          "403": {
            "description": "삭제 권한 없음"
          },
          "404": {
            "description": "모임을 찾을 수 없음"
          }
        }
      }
    },
    "/api/google-calendar/event": {
      "put": {
        "tags": ["event-controller"],
        "operationId": "updateEvent",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["event-controller"],
        "operationId": "createEvent",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/{facilityId}": {
      "get": {
        "tags": ["FacilityController"],
        "summary": "시설 상세 정보 페이지 조회",
        "description": "시설 ID로 상세 정보를 조회합니다.",
        "operationId": "readFacilityDetails",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 시설 상세 정보를 조회했습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityDetailsResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "시설을 찾을 수 없습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityDetailsResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["FacilityController"],
        "summary": "시설 상세 정보 업데이트",
        "description": "시설 상세 정보를 업데이트합니다.",
        "operationId": "updateFacilityDetail",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacilityDetailsUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "성공적으로 시설 상세 정보가 업데이트되었습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityDetailsResponseDTO"
                },
                "example": {
                  "facilityId": "S210401100008601453",
                  "facilityName": "○ [평일] (주간) 마포 난지천 인조잔디축구장 (업데이트)",
                  "facilityCategory": "FOOTBALL_FIELD",
                  "area": "마포구",
                  "priceType": true,
                  "facilityImage": "https://example.com/image.jpg",
                  "reservationStartDate": "2024-11-27T01:44:05.959Z",
                  "reservationEndDate": "2024-11-27T01:44:05.959Z",
                  "facilityNumber": "02-3153-9874",
                  "reservationURL": "https://example.com/reserve",
                  "facilityLocation": "서울특별시 산악문화체험센터>난지천인조잔디축구장",
                  "facilityDescription": "1. 공공시설 예약서비스 이용시 필수 준수사항...",
                  "serviceStartDate": "2024-01-01",
                  "serviceEndDate": "2024-12-31"
                }
              }
            }
          },
          "400": {
            "description": "업데이트 실패",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                },
                "example": {
                  "message": "Invalid input data"
                }
              }
            }
          },
          "404": {
            "description": "시설을 찾을 수 없습니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                },
                "example": {
                  "message": "Facility not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["FacilityController"],
        "summary": "시설 상세 정보 삭제",
        "description": "시설 상세 정보를 삭제합니다.",
        "operationId": "deleteFacilityDetail",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 시설 상세 정보가 삭제되었습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "삭제 실패",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "시설을 찾을 수 없습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/{facilityId}/reviews/{reviewId}": {
      "put": {
        "tags": ["review-controller"],
        "operationId": "updateReview",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["review-controller"],
        "operationId": "deleteReview",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/facade": {
      "put": {
        "tags": ["Activity-MeetingBoard Controller"],
        "summary": "모임 수정하기",
        "description": "모임 게시판과 모임을 동시에 수정합니다",
        "operationId": "updateMeetingActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingBoardRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "업데이트 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "모임(게시판)을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Activity-MeetingBoard Controller"],
        "summary": "모임 생성하기",
        "description": "모임 게시판과 모임을 동시에 생성합니다",
        "operationId": "createMeetingActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingBoardRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "생성 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "회원을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/activity/{activityId}": {
      "get": {
        "tags": ["ActivityController"],
        "summary": "모임을 ID로 검색",
        "description": "특정 ID에 해당하는 모임 정보를 반환합니다.",
        "operationId": "getActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "검색 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "해당 ID의 모임이 존재하지 않음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["ActivityController"],
        "summary": "모임 수정",
        "description": "모임 정보를 업데이트하고, 수정된 정보를 반환합니다.",
        "operationId": "updateActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "모임 수정 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "요청 데이터가 유효하지 않음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "해당 ID의 모임이 존재하지 않음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["ActivityController"],
        "summary": "모임 삭제",
        "description": "특정 ID의 모임을 삭제합니다.",
        "operationId": "deleteActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "모임 삭제 성공",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "해당 ID의 모임이 존재하지 않음",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar/{summary}": {
      "post": {
        "tags": ["calendar-controller"],
        "operationId": "createCalendar",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/refresh/header": {
      "post": {
        "tags": ["UserController"],
        "summary": "토큰 재발급",
        "description": "HTTP헤더에 담긴 refresh_token을 이용해 access_token을 재발급합니다",
        "operationId": "resignAccessTokenByHeader",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtToken"
                },
                "example": {
                  "authentication": "Bearer",
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "userId": "sda1fsd3-ds6au-fs3fds5"
                }
              }
            }
          },
          "400": {
            "description": "토큰이 만료되거나, refresh_token이 아닌 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "유효하지 않은 토큰입니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/refresh/cookie": {
      "post": {
        "tags": ["UserController"],
        "summary": "토큰 재발급",
        "description": "(현재미구현)쿠키에 담긴 refresh토큰을 이용해 access토큰을 재발급합니다",
        "operationId": "resignAccessTokenByCookie",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtToken"
                },
                "example": {
                  "authentication": "Bearer",
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "userId": "sda1fsd3-ds6au-fs3fds5"
                }
              }
            }
          },
          "400": {
            "description": "토큰이 만료되거나, refresh_token이 아닌 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "유효하지 않은 토큰입니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/profile/{userId}": {
      "post": {
        "tags": ["UserController"],
        "summary": "프로필 사진 변경",
        "description": "UserId를 이용해 프로필 사진을 변경합니다",
        "operationId": "changeProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "multipartFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "message": "프로필 사진 변경 완료"
                }
              }
            }
          },
          "400": {
            "description": "이미지 파일이 아니거나, 파일을 첨부하지 않았을 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "파일이 존재하지 않거나, 파일타입이 맞지 않습니다"
                }
              }
            }
          },
          "500": {
            "description": "파일 경로 설정에 문제가 생겼을 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_GATEWAY",
                  "message": "디렉토리 설정이 실패했습니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/password/{userId}": {
      "post": {
        "tags": ["UserController"],
        "summary": "비밀번호 변경",
        "description": "UserId를 이용해 비밀번호를 변경합니다",
        "operationId": "changePassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "message": "비밀번호 변경 완료"
                }
              }
            }
          },
          "400": {
            "description": "비밀번호 재확인 로직을 통과하지 못했을 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "암호가 일치하지 않습니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": ["UserController"],
        "summary": "로그인",
        "description": "이메일, 암호를 입력하여 로그인합니다",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "bearer": "Bearer",
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "userId": "sda1fsd3-ds6au-fs3fds5"
                }
              }
            }
          },
          "400": {
            "description": "입력한 이메일이나 암호가 회원 확인 로직을 통과하지 못했을 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "암호가 일치하지 않습니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/join": {
      "post": {
        "tags": ["UserController"],
        "summary": "회원가입",
        "description": "이메일, 암호, 닉네임을 입력하여 회원가입을 합니다",
        "operationId": "join",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserJoinDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "비밀번호 확인 로직을 통과하지 못했을 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "암호가 일치하지 않습니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/push/send": {
      "get": {
        "tags": ["push-notification-controller"],
        "operationId": "sendPushNotification_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["push-notification-controller"],
        "operationId": "sendPushNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/send": {
      "post": {
        "tags": ["notification-controller"],
        "operationId": "sendPushNotification_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/messages": {
      "post": {
        "tags": ["Message Controller"],
        "summary": "메시지 전송",
        "description": "특정 채팅방에 메시지를 전송합니다.",
        "operationId": "sendMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/meetingboard": {
      "get": {
        "tags": ["Meeting Board"],
        "summary": "모임 전체 조회",
        "description": "등록된 모든 모임을 조회합니다.",
        "operationId": "getAllMeetingBoards",
        "responses": {
          "200": {
            "description": "조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "모임이 없습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "서버 내부 오류",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Meeting Board"],
        "summary": "모임 생성",
        "description": "새로운 모임을 생성합니다.",
        "operationId": "createMeetingBoard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingBoardRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "모임 생성 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "유효하지 않은 요청 데이터",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "로그인이 필요합니다.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingBoardResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/meetingboard/filter": {
      "post": {
        "tags": ["Meeting Board"],
        "summary": "모임 검색",
        "description": "필터를 통해 모임게시판을 검색합니다",
        "operationId": "filterSearch",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardFilterDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "검색 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModel"
                }
              }
            }
          },
          "400": {
            "description": "스포츠 카테고리가 올바르지 않습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/like-facility": {
      "post": {
        "tags": ["facility-Like Controller"],
        "summary": "좋아요",
        "description": "시설 아이디를 받아 좋아요를 누릅니다",
        "operationId": "addlike",
        "parameters": [
          {
            "name": "facilityId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "좋아요",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "이미 좋아요를 눌렀습니다",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["facility-Like Controller"],
        "summary": "좋아요 취소",
        "description": "좋아요를 누른 상태라면 좋아요 취소버튼 활성화 또는 버튼을 다시 누르면 좋아요 취소",
        "operationId": "dislike",
        "parameters": [
          {
            "name": "facilityId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "좋아요 취소",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "유저(시설)을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/fcm": {
      "post": {
        "tags": ["fcm-controller"],
        "operationId": "handleFcmToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/{facilityId}/reviews": {
      "get": {
        "tags": ["review-controller"],
        "operationId": "getReviewsByFacility",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["review-controller"],
        "operationId": "createReview",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/location": {
      "post": {
        "tags": ["FacilityController"],
        "summary": "위치기반 시설 검색",
        "description": "주어진 위도, 경도, 반경에 해당하는 시설들을 검색합니다.",
        "operationId": "searchByLocation",
        "requestBody": {
          "description": "위치 정보와 반경을 포함한 검색 요청 데이터",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacilityLocationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "성공적으로 시설 목록을 반환",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModel"
                },
                "example": {
                  "totalElements": 2,
                  "totalPages": 1,
                  "size": 5,
                  "content": [
                    {
                      "facilityId": "S241010135430829736",
                      "facilityName": "서울대공원 리틀야구장",
                      "facilityCategory": "BASEBALL_FIELD",
                      "area": "과천시",
                      "priceType": false,
                      "facilityImage": "https://example.com/image1.jpg",
                      "reservationStartDate": "2024-10-14T10:00:00",
                      "reservationEndDate": "2024-10-16T16:00:00"
                    },
                    {
                      "facilityId": "S241010135430829737",
                      "facilityName": "서울대공원 풋살장",
                      "facilityCategory": "FOOTBALL_FIELD",
                      "area": "과천시",
                      "priceType": true,
                      "facilityImage": "https://example.com/image2.jpg",
                      "reservationStartDate": "2024-10-15T10:00:00",
                      "reservationEndDate": "2024-10-17T16:00:00"
                    }
                  ],
                  "number": 0,
                  "sort": [
                    {
                      "direction": "ASC",
                      "nullHandling": "NATIVE",
                      "ascending": true,
                      "property": "facilityName",
                      "ignoreCase": true
                    }
                  ],
                  "first": true,
                  "last": true,
                  "numberOfElements": 2,
                  "pageable": {
                    "offset": 0,
                    "sort": [
                      {
                        "direction": "ASC",
                        "nullHandling": "NATIVE",
                        "ascending": true,
                        "property": "facilityName",
                        "ignoreCase": true
                      }
                    ],
                    "paged": true,
                    "pageSize": 5,
                    "pageNumber": 0,
                    "unpaged": false
                  },
                  "empty": false
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/filter": {
      "post": {
        "tags": ["FacilityController"],
        "summary": "시설 필터링 검색",
        "description": "시설 검색정보를 여러 조건으로 필터링하여 조회합니다.",
        "operationId": "facilityFilter",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacilityFilterDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "필터링된 시설 목록 조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModel"
                }
              }
            }
          },
          "400": {
            "description": "필터링 에러",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                },
                "example": {
                  "message": "Invalid input data"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/all-memory": {
      "post": {
        "tags": ["FacilityController"],
        "summary": "모든 시설 상세 정보 저장",
        "description": "서울시 공공 서비스예약의 모든 시설 데이터를 API를 통해 가져와서 저장합니다.",
        "operationId": "addAllFacilityDetails",
        "responses": {
          "200": {
            "description": "성공적으로 모든 시설 상세 정보를 저장했습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "데이터 수집에 실패했습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/email": {
      "get": {
        "tags": ["EmailController"],
        "summary": "검증",
        "description": "보낸 코드값이 서버의 저장값과 일치하는지 확인합니다",
        "operationId": "verifyCode",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "인증번호를 보낸 email 주소",
            "required": true,
            "schema": {
              "type": "string",
              "description": "인증번호를 보낸 email 주소",
              "example": "example@example.com"
            },
            "example": "example@example.com"
          },
          {
            "name": "code",
            "in": "query",
            "description": "받은 인증번호",
            "required": true,
            "schema": {
              "type": "string",
              "description": "받은 인증번호",
              "example": 123456
            },
            "example": 123456
          }
        ],
        "responses": {
          "200": {
            "description": "인증 성공",
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "message": "인증 성공"
                }
              }
            }
          },
          "400": {
            "description": "인증 실패 : 인증번호 불일치",
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "인증번호가 일치하지 않습니다"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["EmailController"],
        "summary": "이메일 발송",
        "description": "이메일 인증을 위한 코드를 발송합니다",
        "operationId": "sendCode",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "인증번호를 보낼 email 주소",
            "required": true,
            "schema": {
              "type": "string",
              "description": "인증번호를 보낼 email 주소",
              "example": "example@example.com"
            },
            "example": "example@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "message": "발송 완료"
                }
              }
            }
          },
          "400": {
            "description": "이미 인증을 보낸 메일일 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "이미 인증을 요청한 메일입니다"
                }
              }
            }
          },
          "500": {
            "description": "서버에서 메일 전송이 실패할 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "INTERVAL_SERVER_ERROR",
                  "message": "메일 전송에 실패했습니다."
                }
              }
            }
          }
        }
      }
    },
    "/api/chatroom": {
      "get": {
        "tags": ["ChatRoom Controller"],
        "summary": "모든 채팅방 조회",
        "description": "현재 존재하는 모든 채팅방을 조회합니다.",
        "operationId": "getAllChatRooms",
        "responses": {
          "200": {
            "description": "채팅방 목록 조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRoomResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ChatRoom Controller"],
        "summary": "그룹 채팅방 생성",
        "description": "새로운 그룹 채팅방을 생성합니다.",
        "operationId": "createChatRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRoomRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "채팅방 생성 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRoomResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청",
            "content": {
              "application/json": {
                "example": {
                  "message": "잘못된 요청입니다."
                }
              }
            }
          }
        }
      }
    },
    "/api/chatroom/{chatRoomId}/join": {
      "post": {
        "tags": ["ChatRoom Controller"],
        "summary": "특정 채팅방 입장",
        "description": "사용자가 특정 채팅방에 입장합니다.",
        "operationId": "joinChatRoom",
        "parameters": [
          {
            "name": "chatRoomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "채팅방 입장 성공",
            "content": {
              "application/json": {
                "example": {
                  "message": "사용자가 채팅방에 입장했습니다."
                }
              }
            }
          },
          "404": {
            "description": "채팅방을 찾을 수 없음",
            "content": {
              "application/json": {
                "example": {
                  "message": "채팅방을 찾을 수 없습니다."
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/join": {
      "post": {
        "tags": ["admin-controller"],
        "operationId": "joinAdmin",
        "parameters": [
          {
            "name": "adminJoinDTO",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AdminJoinDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/activity": {
      "get": {
        "tags": ["ActivityController"],
        "summary": "내 모임 조회",
        "description": "유저 아이디를 통해 유저의 모임들을 조회합니다",
        "operationId": "findActivitiesByUserId",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "조회성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModel"
                }
              }
            }
          },
          "404": {
            "description": "유저를 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ActivityController"],
        "summary": "모임 생성",
        "description": "새로운 모임을 생성하고, 생성된 모임 정보를 반환합니다.",
        "operationId": "createActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "모임 생성 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "생성 데이터가 유효하지 않음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/activity-participants/{activityId}": {
      "post": {
        "tags": ["Activity ParticipantsController "],
        "summary": "모임 참가",
        "description": "모임 아이디를 기반으로 모임을 참가합니다",
        "operationId": "joinActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "참가 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "모임에 더 참가할 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Activity ParticipantsController "],
        "summary": "모임 나가기",
        "description": "모임 아이디 기반 모임 나가기",
        "operationId": "quitActivity",
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "모임을 찾을 수 없습니다",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/nickname/{userId}": {
      "patch": {
        "tags": ["UserController"],
        "summary": "닉네임 변경",
        "description": "UserId를 이용해 닉네임을 변경합니다(도메인 규칙 : 2~10자 사이의 한글,영어소문자,숫자만)",
        "operationId": "updateNickname",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangeInfoDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "message": "닉네임 변경 완료"
                }
              }
            }
          },
          "400": {
            "description": "닉네임 변경 규칙을 지키지 않았을 경우",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "httpStatus": "BAD_REQUEST",
                  "message": "닉네임을 다시 설정해주세요"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/description/{userId}": {
      "patch": {
        "tags": ["UserController"],
        "summary": "소개글 변경",
        "description": "UserId를 이용해 소개글을 변경합니다",
        "operationId": "updateDescription",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangeInfoDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "message": "소개글 수정 완료"
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": ["tag-controller"],
        "operationId": "getTags",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendars": {
      "get": {
        "tags": ["calendar-controller"],
        "operationId": "listCalendars",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{userId}": {
      "get": {
        "tags": ["UserController"],
        "summary": "회원 정보 조회",
        "description": "UserId를 이용해 회원정보를 조회합니다",
        "operationId": "findMyInformation",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "userId": "adf2ds3-das4fs2daf-ds4a3fn23",
                  "email": "example@example.com",
                  "profile_image": "BAD_REQUEST",
                  "nickname": "만득이",
                  "description": "안녕하세요. 반갑습니다",
                  "role": "USER"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["UserController"],
        "summary": "회원 탈퇴",
        "description": "UserId를 이용해 회원정보를 삭제합니다",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "message": "회원 탈퇴 완료"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/logout": {
      "get": {
        "tags": ["UserController"],
        "summary": "로그아웃",
        "description": "로그아웃을 합니다.",
        "operationId": "logout",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "로그아웃 완료"
          }
        }
      }
    },
    "/api/oauth2/{provider}": {
      "get": {
        "tags": ["OAuth2Controller"],
        "summary": "소셜 로그인",
        "description": "OAUTH2.0을 통해 로그인합니다",
        "operationId": "OauthLogin",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "정상 반환",
            "content": {
              "application/json": {
                "example": {
                  "bearer": "Bearer",
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "userId": "sda1fsd3-ds6au-fs3fds5"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/{chatRoomId}": {
      "get": {
        "tags": ["Message Controller"],
        "summary": "특정 채팅방 메시지 조회",
        "description": "특정 채팅방에 포함된 메시지를 조회합니다.",
        "operationId": "getMessagesByChatRoom",
        "parameters": [
          {
            "name": "chatRoomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageResponseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/google-calendar/event/events": {
      "get": {
        "tags": ["event-controller"],
        "operationId": "listEvents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail": {
      "get": {
        "tags": ["FacilityController"],
        "summary": "시설 상세 정보 가져오기",
        "description": "시설의 이름으로 상세 정보를 가져옵니다.",
        "operationId": "getFacilityDetail",
        "parameters": [
          {
            "name": "facilityName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "성공적으로 데이터를 가져왔습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "시설을 찾을 수 없습니다.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/list": {
      "get": {
        "tags": ["FacilityController"],
        "summary": "시설 목록 페이지 조회",
        "description": "모든 시설 목록을 페이지 단위로 조회합니다.",
        "operationId": "getAllFacilities",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "시설 목록 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacilityPageResponseDTO"
                },
                "example": {
                  "content": [
                    {
                      "facilityId": "S210401100008601453",
                      "facilityName": "마포 난지천 인조잔디축구장",
                      "area": "마포구",
                      "facilityCategory": "FOOTBALL_FIELD",
                      "reservationStartDate": "2024-11-27T01:44:05.959Z",
                      "reservationEndDate": "2024-11-27T01:44:05.959Z"
                    },
                    {
                      "facilityId": "S210401100008601454",
                      "facilityName": "강동구 실내 배드민턴장",
                      "area": "강동구",
                      "facilityCategory": "BADMINTON_COURT",
                      "reservationStartDate": "2024-11-28T01:44:05.959Z",
                      "reservationEndDate": "2024-11-28T01:44:05.959Z"
                    }
                  ],
                  "pageable": {
                    "pageNumber": 0,
                    "pageSize": 10,
                    "sort": {
                      "sorted": true,
                      "unsorted": false,
                      "empty": false
                    }
                  },
                  "totalElements": 200,
                  "totalPages": 20,
                  "last": false,
                  "first": true,
                  "size": 10,
                  "number": 0,
                  "sort": {
                    "sorted": true,
                    "unsorted": false,
                    "empty": false
                  },
                  "numberOfElements": 10
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/details": {
      "get": {
        "tags": ["FacilityController"],
        "summary": "시설 상세 정보 목록 조회",
        "description": "모든 시설 상세 정보를 페이지 단위로 조회합니다.",
        "operationId": "getAllFacilityDetails",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/chatroom/{chatRoomId}": {
      "get": {
        "tags": ["ChatRoom Controller"],
        "summary": "특정 채팅방 정보 조회",
        "description": "특정 채팅방의 정보를 조회합니다.",
        "operationId": "getChatRoomById",
        "parameters": [
          {
            "name": "chatRoomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "채팅방 정보 조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRoomResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "채팅방을 찾을 수 없음",
            "content": {
              "application/json": {
                "example": {
                  "message": "채팅방을 찾을 수 없습니다."
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/chatparticipant": {
      "get": {
        "tags": ["Chat Participant Controller"],
        "summary": "채팅 참가자 정보 조회",
        "description": "특정 채팅방에 속한 참가자의 정보를 조회합니다.",
        "operationId": "getParticipant",
        "parameters": [
          {
            "name": "chatRoomId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "참가자 정보 조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChatParticipantResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청",
            "content": {
              "application/json": {
                "example": {
                  "message": "잘못된 요청입니다."
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": ["admin-controller"],
        "operationId": "findAllUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/super/codes": {
      "get": {
        "tags": ["admin-controller"],
        "operationId": "findAllCode",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/super/code": {
      "get": {
        "tags": ["admin-controller"],
        "operationId": "generateCode",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminCode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/super/admins": {
      "get": {
        "tags": ["admin-controller"],
        "operationId": "findAllAdmins",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["controller"],
        "operationId": "home",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/messages/{chatRoomId}/{messageId}": {
      "delete": {
        "tags": ["Message Controller"],
        "summary": "메시지 삭제",
        "description": "특정 메시지를 삭제합니다.",
        "operationId": "deleteMessage",
        "parameters": [
          {
            "name": "chatRoomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "requesterId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/google-calendar/event/eventId": {
      "delete": {
        "tags": ["event-controller"],
        "operationId": "deleteEvent",
        "parameters": [
          {
            "name": "googleCalenderId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/all": {
      "delete": {
        "tags": ["FacilityController"],
        "operationId": "deleteAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chatroom/{chatRoomId}/leave": {
      "delete": {
        "tags": ["ChatRoom Controller"],
        "summary": "채팅방 나가기",
        "description": "참가자가 채팅방을 나갑니다.",
        "operationId": "leaveChatRoom",
        "parameters": [
          {
            "name": "chatRoomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "채팅방 나가기 성공",
            "content": {
              "application/json": {
                "example": {
                  "message": "채팅방을 성공적으로 나갔습니다."
                }
              }
            }
          },
          "404": {
            "description": "채팅방을 찾을 수 없음",
            "content": {
              "application/json": {
                "example": {
                  "message": "채팅방을 찾을 수 없습니다."
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/super/admin/{userId}": {
      "delete": {
        "tags": ["admin-controller"],
        "operationId": "deleteAdmin",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MeetingBoardRequestDTO": {
        "required": [
          "endTime",
          "maxParticipants",
          "mbContent",
          "mbLocation",
          "mbTitle",
          "sportType",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "sportType": {
            "type": "string",
            "description": "운동 종목 (예: SOCCER, BASEBALL)",
            "example": "SOCCER",
            "enum": [
              "BADMINTON",
              "BASEBALL",
              "BASKETBALL",
              "SOCCER",
              "SWIMMING",
              "TENNIS"
            ]
          },
          "mbTitle": {
            "type": "string",
            "description": "모임 제목",
            "example": "풋살 경기 참가자 모집"
          },
          "mbContent": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "모임 내용",
            "example": "이번 주 토요일 오후 3시에 함께 풋살하실 분 모집합니다!"
          },
          "startTime": {
            "type": "string",
            "description": "모임 시작 시간",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "모임 종료 시간",
            "format": "date-time"
          },
          "mbLocation": {
            "type": "string",
            "description": "모임 장소",
            "example": "서울특별시 강남구 삼성동 풋살장"
          },
          "maxParticipants": {
            "type": "integer",
            "description": "최대 참여자 수",
            "format": "int32",
            "example": 10
          }
        },
        "description": "모임 게시판 요청 DTO"
      },
      "MeetingBoardResponseDTO": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "integer",
            "description": "모임 게시판 ID",
            "format": "int64",
            "example": 1001
          },
          "sportType": {
            "type": "string",
            "description": "운동 종목 (예: SOCCER, BASEBALL)",
            "example": "SOCCER",
            "enum": [
              "BADMINTON",
              "BASEBALL",
              "BASKETBALL",
              "SOCCER",
              "SWIMMING",
              "TENNIS"
            ]
          },
          "mbTitle": {
            "type": "string",
            "description": "모임 제목",
            "example": "풋살 경기 참가자 모집"
          },
          "mbContent": {
            "type": "string",
            "description": "모임 내용",
            "example": "이번 주 토요일 오후 3시에 함께 풋살하실 분 모집합니다!"
          },
          "startTime": {
            "type": "string",
            "description": "모임 시작 시간",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "모임 종료 시간",
            "format": "date-time"
          },
          "mbLocation": {
            "type": "string",
            "description": "모임 장소",
            "example": "서울특별시 강남구 삼성동 풋살장"
          },
          "maxParticipants": {
            "type": "integer",
            "description": "최대 참여자 수",
            "format": "int32",
            "example": 10
          },
          "mbCreatedDate": {
            "type": "string",
            "description": "생성 일자",
            "format": "date-time"
          },
          "mbLastModifiedDate": {
            "type": "string",
            "description": "마지막 수정 일자",
            "format": "date-time"
          },
          "mbHostId": {
            "type": "string",
            "description": "모임 주최자 ID",
            "example": "user123"
          }
        },
        "description": "모임 게시판 응답 DTO"
      },
      "ActivityRequestDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "모임의 제목",
            "example": "주간 팀 회의"
          },
          "description": {
            "type": "string",
            "description": "모임 설명",
            "example": "주간 회의입니다."
          },
          "location": {
            "type": "string",
            "description": "모임 장소",
            "example": "서울 컨퍼런스룸 A"
          },
          "startTime": {
            "type": "string",
            "description": "모임 시작 시간 (ISO 8601 형식)",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "모임 종료 시간 (ISO 8601 형식)",
            "format": "date-time"
          },
          "maxParticipants": {
            "type": "integer",
            "description": "모임 최대 참석자 수",
            "format": "int32",
            "example": 10
          }
        }
      },
      "FacilityDetailsUpdateDTO": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "string",
            "description": "시설 고유 ID",
            "example": "S210401100008601453"
          },
          "facilityName": {
            "type": "string",
            "description": "시설 이름",
            "example": "○ [평일] (주간) 마포 난지천 인조잔디축구장 (업데이트)"
          },
          "facilityCategory": {
            "type": "string",
            "description": "시설 카테고리",
            "example": "FOOTBALL_FIELD",
            "enum": [
              "FOOTBALL_FIELD",
              "FUTSAL_FIELD",
              "FOOT_VOLLEYBALL_FIELD",
              "BASEBALL_FIELD",
              "TENNIS_FIELD",
              "BASKETBALL_FIELD",
              "VOLLEYBALL_FIELD",
              "MULTIPURPOSE_FIELD",
              "SPORTS_FIELD",
              "GYM",
              "BADMINTON_FIELD",
              "TABLE_TENNIS_FIELD",
              "EDUCATIONAL_FACILITY",
              "SWIMMING_POOL",
              "GOLF_FIELD"
            ]
          },
          "area": {
            "type": "string",
            "description": "시설 지역",
            "example": "마포구"
          },
          "priceType": {
            "type": "boolean",
            "description": "무료(true) / 유료(false)",
            "example": true
          },
          "facilityImage": {
            "type": "string",
            "description": "시설 이미지 URL",
            "example": "http://example.com/facility.jpg"
          },
          "reservationStartDate": {
            "type": "string",
            "description": "서비스 시작 날짜",
            "format": "date-time"
          },
          "reservationEndDate": {
            "type": "string",
            "description": "서비스 종료 날짜",
            "format": "date-time"
          },
          "facilityNumber": {
            "type": "string",
            "description": "시설 전화번호",
            "example": "02-3153-9874"
          },
          "reservationURL": {
            "type": "string",
            "description": "예약 URL",
            "example": "http://example.com/reservation"
          },
          "facilityLocation": {
            "type": "string",
            "description": "시설 상세 주소",
            "example": "서울특별시 산악문화체험센터>난지천인조잔디축구장"
          },
          "facilityDescription": {
            "type": "string",
            "description": "시설 설명",
            "example": "1. 공공시설 예약서비스 이용시 필수 준수사항..."
          },
          "serviceStartDate": {
            "type": "string",
            "description": "서비스 시작 날짜 (String 형식)",
            "example": "2024-01-01"
          },
          "serviceEndDate": {
            "type": "string",
            "description": "서비스 종료 날짜 (String 형식)",
            "example": "2024-12-31"
          }
        }
      },
      "ErrorResponseDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "에러 코드"
          },
          "message": {
            "type": "string",
            "description": "에러 메시지"
          },
          "details": {
            "type": "string",
            "description": "에러에 대한 세부 설명"
          }
        }
      },
      "FacilityDetailsResponseDTO": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "string",
            "description": "시설 고유 ID",
            "example": "S210401100008601453"
          },
          "facilityName": {
            "type": "string",
            "description": "시설 이름",
            "example": "○ [평일] (주간) 마포 난지천 인조잔디축구장"
          },
          "facilityCategory": {
            "type": "string",
            "description": "시설 카테고리",
            "example": "FOOTBALL_FIELD",
            "enum": [
              "FOOTBALL_FIELD",
              "FUTSAL_FIELD",
              "FOOT_VOLLEYBALL_FIELD",
              "BASEBALL_FIELD",
              "TENNIS_FIELD",
              "BASKETBALL_FIELD",
              "VOLLEYBALL_FIELD",
              "MULTIPURPOSE_FIELD",
              "SPORTS_FIELD",
              "GYM",
              "BADMINTON_FIELD",
              "TABLE_TENNIS_FIELD",
              "EDUCATIONAL_FACILITY",
              "SWIMMING_POOL",
              "GOLF_FIELD"
            ]
          },
          "area": {
            "type": "string",
            "description": "시설 지역",
            "example": "마포구"
          },
          "priceType": {
            "type": "boolean",
            "description": "무료/유료 여부",
            "example": true
          },
          "facilityImage": {
            "type": "string",
            "description": "시설 이미지 URL",
            "example": "https://example.com/image.jpg"
          },
          "reservationStartDate": {
            "type": "string",
            "description": "예약 시작 날짜",
            "format": "date-time"
          },
          "reservationEndDate": {
            "type": "string",
            "description": "예약 종료 날짜",
            "format": "date-time"
          },
          "facilityNumber": {
            "type": "string",
            "description": "시설 전화번호",
            "example": "02-3153-9874"
          },
          "reservationURL": {
            "type": "string",
            "description": "시설 예약 URL",
            "example": "https://example.com/reserve"
          },
          "facilityLocation": {
            "type": "string",
            "description": "시설 상세 주소",
            "example": "서울특별시 산악문화체험센터>난지천인조잔디축구장"
          },
          "facilityDescription": {
            "type": "string",
            "description": "시설 설명",
            "example": "1. 공공시설 예약서비스 이용시 필수 준수사항..."
          },
          "serviceStartDate": {
            "type": "string",
            "description": "서비스 시작 날짜",
            "example": "2024-01-01"
          },
          "serviceEndDate": {
            "type": "string",
            "description": "서비스 종료 날짜",
            "example": "2024-12-31"
          },
          "latitude": {
            "type": "number",
            "description": "위도",
            "format": "double",
            "example": 37.5741
          },
          "longitude": {
            "type": "number",
            "description": "경도",
            "format": "double",
            "example": 126.884
          },
          "liked": {
            "type": "boolean",
            "description": "좋아요 확인",
            "example": false
          },
          "likeCount": {
            "type": "integer",
            "description": "좋아요 개수",
            "format": "int32",
            "example": 3
          },
          "views": {
            "type": "integer",
            "description": "조회수",
            "format": "int32",
            "example": 2
          }
        }
      },
      "ReviewDTO": {
        "type": "object",
        "properties": {
          "reviewId": {
            "type": "integer",
            "format": "int64"
          },
          "facilityId": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "YANGCHEON",
                "GANGSEO",
                "GURO",
                "GEUMCHEON",
                "GWANAK",
                "DONGJAK",
                "SEOCHO",
                "GANGNAM",
                "SONGPA",
                "GANGDONG",
                "GWANGJIN",
                "SEONGDONG",
                "JUNGGU",
                "YONGSAN",
                "YEONGDEUNGPO",
                "MAPO",
                "SEODAEMUN",
                "EUNPYEONG",
                "JONGNO",
                "DONGDAEMUN",
                "SEONGBUK",
                "JUNGRANG",
                "NOWON",
                "DOBONG",
                "GANGBUK",
                "TENNIS",
                "BASKETBALL",
                "FOOTBALL",
                "FUTSAL",
                "BASEBALL",
                "VOLLEYBALL",
                "PINGPONG",
                "BADMINTON",
                "BOWLING",
                "SWIMMING",
                "HOCKEY",
                "GOLF",
                "ETC",
                "CLEAN",
                "SPACIOUS",
                "FREE",
                "CAFE",
                "GOOD_LOCATION",
                "EASY_RESERVATION",
                "LARGE_RESERVATION",
                "MODERN_EQUIPMENT",
                "RENTAL_AVAILABLE",
                "PARKING_AVAILABLE",
                "EAT_AVAILABLE",
                "SHOWER_AVAILABLE",
                "CHILDCARE_AVAILABLE",
                "CLASSES_AVAILABLE",
                "EVENT_AVAILABLE",
                "WHEELCHAIR_ACCESSIBLE",
                "SAFE_ENVIRONMENT",
                "CHANGING_ROOM",
                "PET_FRIENDLY",
                "ALL_HOURS"
              ]
            }
          },
          "likes": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JwtToken": {
        "type": "object",
        "properties": {
          "authentication": {
            "type": "string",
            "description": "인증 통신을 위한 bearer 고정값"
          },
          "accessToken": {
            "type": "string",
            "description": "사이트 권한을 위한 access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "refreshToken": {
            "type": "string",
            "description": "access token 재발급을 위한 refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "userId": {
            "type": "string",
            "description": "사용자 고유번호",
            "example": "sda1fsd3-ds6au-fs3fds5"
          }
        }
      },
      "ActivityResponseDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "모임의 제목입니다",
            "example": "주간 미팅"
          },
          "description": {
            "type": "string",
            "description": "모임의 설명입니다",
            "example": "주간 회의를 위한 미팅입니다."
          },
          "location": {
            "type": "string",
            "description": "모임 지역입니다",
            "example": "컨퍼런스 룸 A"
          },
          "startTime": {
            "type": "string",
            "description": "모임 시작시간입니다  (ISO 8601 로 이루어져있습니다)",
            "example": "2024-12-01T10:00:00"
          },
          "endTime": {
            "type": "string",
            "description": "모임 종료시간입니다 (ISO 8601 format)",
            "example": "2024-12-01T12:00:00"
          },
          "maxParticipants": {
            "type": "integer",
            "description": "최대 참가자 수 입니다",
            "format": "int32",
            "example": 20
          },
          "currentParticipants": {
            "type": "integer",
            "description": "현재 참가자 수 입니다",
            "format": "int32",
            "example": 1
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "httpStatus": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 EARLY_HINTS",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ChangePasswordDTO": {
        "required": ["changePassword", "checkChangePassword", "email"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "사용자 이메일",
            "example": "example@example.com"
          },
          "changePassword": {
            "type": "string",
            "description": "변경할 비밀번호",
            "example": "password12345"
          },
          "checkChangePassword": {
            "type": "string",
            "description": "변경할 비밀번호 확인",
            "example": "password12345"
          }
        }
      },
      "UserLoginDTO": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "사용자 이메일",
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "description": "사용자 비밀번호",
            "example": "password123"
          },
          "fcmToken": {
            "type": "string"
          },
          "passwordEmpty": {
            "type": "boolean"
          }
        }
      },
      "UserJoinDTO": {
        "required": ["checkPassword", "email", "nickname", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "사용자 이메일",
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "description": "사용자 비밀번호",
            "example": "password123"
          },
          "checkPassword": {
            "type": "string",
            "description": "비밀번호 확인",
            "example": "password123"
          },
          "nickname": {
            "type": "string",
            "description": "사용자 닉네임",
            "example": "만득이"
          }
        },
        "description": "회원가입 요청 데이터"
      },
      "NotificationCreateDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "NotificationDTO": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "MessageRequestDTO": {
        "required": ["chatRoomId", "content", "participantId"],
        "type": "object",
        "properties": {
          "chatRoomId": {
            "type": "integer",
            "description": "채팅방 ID",
            "format": "int64",
            "example": 101
          },
          "participantId": {
            "type": "integer",
            "description": "참가자 ID",
            "format": "int64",
            "example": 202
          },
          "content": {
            "type": "string",
            "description": "메시지 내용",
            "example": "안녕하세요!"
          }
        },
        "description": "메시지 요청 DTO"
      },
      "MessageResponseDTO": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "integer",
            "description": "메시지 ID",
            "format": "int64",
            "example": 1001
          },
          "content": {
            "type": "string",
            "description": "메시지 내용",
            "example": "안녕하세요!"
          },
          "sender": {
            "type": "string",
            "description": "보낸 사람 닉네임",
            "example": "홍길동"
          },
          "chatRoomId": {
            "type": "integer",
            "description": "채팅방 ID",
            "format": "int64",
            "example": 2002
          },
          "sentAt": {
            "type": "string",
            "description": "메시지 전송 시간",
            "format": "date-time"
          }
        },
        "description": "메시지 응답 DTO"
      },
      "BoardFilterDTO": {
        "type": "object",
        "properties": {
          "타이틀": {
            "type": "string"
          },
          "장소": {
            "type": "string"
          },
          "스포츠 타입": {
            "type": "string",
            "description": "Enum에서 영어로 BADMINTON,SOCCER ... 으로 되어있습니다",
            "example": "SOCCER"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedModel": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "FacilityLocationDTO": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "검색할 시설의 위도",
            "format": "double",
            "example": 37.436429919747084
          },
          "longitude": {
            "type": "number",
            "description": "검색할 시설의 경도",
            "format": "double",
            "example": 127.01409711887952
          },
          "radius": {
            "type": "number",
            "description": "검색할 반경 (킬로미터 단위)",
            "format": "double",
            "example": 5
          }
        }
      },
      "FacilityFilterDTO": {
        "type": "object",
        "properties": {
          "facilityName": {
            "type": "string",
            "description": "시설 이름"
          },
          "facilityCategory": {
            "type": "string",
            "description": "시설 카테고리",
            "example": "축구장",
            "default": "축구장"
          },
          "area": {
            "type": "string",
            "description": "시설 지역",
            "example": "마포구",
            "default": "마포구"
          },
          "priceType": {
            "type": "boolean",
            "description": "시설 가격 유형(무료/유료)",
            "example": true,
            "default": true
          },
          "likeOrder": {
            "type": "integer",
            "description": "좋아요 정렬 기준 (0: 정렬 없음, 1: 내림차순, 2: 오름차순)",
            "format": "int32",
            "example": 1,
            "default": 0
          },
          "viewsOrder": {
            "type": "integer",
            "description": "조회수 정렬 기준(0): 정렬 없음, 1:내림차순, 2:오름차순",
            "format": "int32"
          }
        }
      },
      "ChatRoomRequestDTO": {
        "required": ["chatRoomName", "chatRoomType"],
        "type": "object",
        "properties": {
          "chatRoomName": {
            "type": "string",
            "description": "채팅방 이름",
            "example": "Fun Chat Room"
          },
          "chatRoomType": {
            "type": "string",
            "description": "채팅방 타입 (GROUP 또는 PRIVATE)",
            "example": "GROUP"
          },
          "maxParticipants": {
            "type": "integer",
            "description": "채팅방 최대 참여 인원 (1대1 채팅 시 2)",
            "format": "int32",
            "example": 10
          }
        },
        "description": "채팅방 생성 요청 DTO"
      },
      "ChatRoomResponseDTO": {
        "type": "object",
        "properties": {
          "chatRoomId": {
            "type": "integer",
            "description": "채팅방 ID",
            "format": "int64",
            "example": 101
          },
          "chatRoomName": {
            "type": "string",
            "description": "채팅방 이름",
            "example": "친구들과의 모임"
          },
          "chatRoomType": {
            "type": "string",
            "description": "채팅방 타입 (GROUP 또는 PRIVATE)",
            "example": "GROUP"
          },
          "createdAt": {
            "type": "string",
            "description": "채팅방 생성 시간",
            "format": "date-time"
          }
        },
        "description": "채팅방 응답 DTO"
      },
      "AdminJoinDTO": {
        "required": [
          "adminCode",
          "checkPassword",
          "email",
          "nickname",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "관리자 이메일",
            "example": "example@example.com"
          },
          "password": {
            "type": "string",
            "description": "관리자 비밀번호",
            "example": "password123"
          },
          "checkPassword": {
            "type": "string",
            "description": "비밀번호 확인",
            "example": "password123"
          },
          "nickname": {
            "type": "string",
            "description": "관리자 닉네임",
            "example": "만득이"
          },
          "adminCode": {
            "type": "string",
            "description": "관리자 가입 확인용 인증코드",
            "example": "d3j-234hjfhj-234jg"
          }
        },
        "description": "회원가입 요청 데이터"
      },
      "UserChangeInfoDTO": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "description": "변경할 닉네임",
            "example": "만득이"
          },
          "description": {
            "type": "string",
            "description": "변경할 소개글",
            "example": "안녕하세요. 반갑습니다."
          }
        }
      },
      "TagDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ClassInfo": {
        "type": "object",
        "properties": {
          "ignoreCase": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enum": {
            "type": "boolean"
          },
          "fieldInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            }
          }
        }
      },
      "DateTime": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "dateOnly": {
            "type": "boolean"
          },
          "timeZoneShift": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EntryPoint": {
        "type": "object",
        "properties": {
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "accessCode": {
            "type": "string"
          },
          "entryPointFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entryPointType": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "meetingCode": {
            "type": "string"
          },
          "passcode": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "pin": {
            "type": "string"
          },
          "regionCode": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "unknownKeys": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "anyoneCanAddSelf": {
            "type": "boolean"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventAttachment"
            }
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventAttendee"
            }
          },
          "attendeesOmitted": {
            "type": "boolean"
          },
          "colorId": {
            "type": "string"
          },
          "conferenceData": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "conferenceId": {
                "type": "string"
              },
              "conferenceSolution": {
                "type": "object",
                "properties": {
                  "classInfo": {
                    "$ref": "#/components/schemas/ClassInfo"
                  },
                  "iconUri": {
                    "type": "string"
                  },
                  "key": {
                    "type": "object",
                    "properties": {
                      "classInfo": {
                        "$ref": "#/components/schemas/ClassInfo"
                      },
                      "type": {
                        "type": "string"
                      },
                      "factory": {
                        "$ref": "#/components/schemas/JsonFactory"
                      },
                      "unknownKeys": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "empty": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "factory": {
                    "$ref": "#/components/schemas/JsonFactory"
                  },
                  "unknownKeys": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "empty": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              },
              "createRequest": {
                "type": "object",
                "properties": {
                  "classInfo": {
                    "$ref": "#/components/schemas/ClassInfo"
                  },
                  "conferenceSolutionKey": {
                    "type": "object",
                    "properties": {
                      "classInfo": {
                        "$ref": "#/components/schemas/ClassInfo"
                      },
                      "type": {
                        "type": "string"
                      },
                      "factory": {
                        "$ref": "#/components/schemas/JsonFactory"
                      },
                      "unknownKeys": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "empty": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "requestId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "object",
                    "properties": {
                      "classInfo": {
                        "$ref": "#/components/schemas/ClassInfo"
                      },
                      "statusCode": {
                        "type": "string"
                      },
                      "factory": {
                        "$ref": "#/components/schemas/JsonFactory"
                      },
                      "unknownKeys": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "empty": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "factory": {
                    "$ref": "#/components/schemas/JsonFactory"
                  },
                  "unknownKeys": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "empty": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              },
              "entryPoints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntryPoint"
                }
              },
              "notes": {
                "type": "string"
              },
              "parameters": {
                "type": "object",
                "properties": {
                  "classInfo": {
                    "$ref": "#/components/schemas/ClassInfo"
                  },
                  "addOnParameters": {
                    "type": "object",
                    "properties": {
                      "classInfo": {
                        "$ref": "#/components/schemas/ClassInfo"
                      },
                      "parameters": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "factory": {
                        "$ref": "#/components/schemas/JsonFactory"
                      },
                      "unknownKeys": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "empty": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "factory": {
                    "$ref": "#/components/schemas/JsonFactory"
                  },
                  "unknownKeys": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "empty": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              },
              "signature": {
                "type": "string"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "created": {
            "$ref": "#/components/schemas/DateTime"
          },
          "creator": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "displayName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "self": {
                "type": "boolean"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "description": {
            "type": "string"
          },
          "end": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "date": {
                "$ref": "#/components/schemas/DateTime"
              },
              "dateTime": {
                "$ref": "#/components/schemas/DateTime"
              },
              "timeZone": {
                "type": "string"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "endTimeUnspecified": {
            "type": "boolean"
          },
          "etag": {
            "type": "string"
          },
          "extendedProperties": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "shared": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "private": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "gadget": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "display": {
                "type": "string"
              },
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "iconLink": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "preferences": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "title": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "width": {
                "type": "integer",
                "format": "int32"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "guestsCanInviteOthers": {
            "type": "boolean"
          },
          "guestsCanModify": {
            "type": "boolean"
          },
          "guestsCanSeeOtherGuests": {
            "type": "boolean"
          },
          "hangoutLink": {
            "type": "string"
          },
          "htmlLink": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "organizer": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "displayName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "self": {
                "type": "boolean"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "originalStartTime": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "date": {
                "$ref": "#/components/schemas/DateTime"
              },
              "dateTime": {
                "$ref": "#/components/schemas/DateTime"
              },
              "timeZone": {
                "type": "string"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "privateCopy": {
            "type": "boolean"
          },
          "recurrence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recurringEventId": {
            "type": "string"
          },
          "reminders": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "overrides": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventReminder"
                }
              },
              "useDefault": {
                "type": "boolean"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "title": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "start": {
            "type": "object",
            "properties": {
              "classInfo": {
                "$ref": "#/components/schemas/ClassInfo"
              },
              "date": {
                "$ref": "#/components/schemas/DateTime"
              },
              "dateTime": {
                "$ref": "#/components/schemas/DateTime"
              },
              "timeZone": {
                "type": "string"
              },
              "factory": {
                "$ref": "#/components/schemas/JsonFactory"
              },
              "unknownKeys": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "empty": {
                "type": "boolean"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          },
          "status": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "transparency": {
            "type": "string"
          },
          "updated": {
            "$ref": "#/components/schemas/DateTime"
          },
          "visibility": {
            "type": "string"
          },
          "icalUID": {
            "type": "string"
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "unknownKeys": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "EventAttachment": {
        "type": "object",
        "properties": {
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "fileId": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "iconLink": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "unknownKeys": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "EventAttendee": {
        "type": "object",
        "properties": {
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "additionalGuests": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          },
          "organizer": {
            "type": "boolean"
          },
          "resource": {
            "type": "boolean"
          },
          "responseStatus": {
            "type": "string"
          },
          "self": {
            "type": "boolean"
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "unknownKeys": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "EventReminder": {
        "type": "object",
        "properties": {
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "method": {
            "type": "string"
          },
          "minutes": {
            "type": "integer",
            "format": "int32"
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "unknownKeys": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Events": {
        "type": "object",
        "properties": {
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "accessRole": {
            "type": "string"
          },
          "defaultReminders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventReminder"
            }
          },
          "description": {
            "type": "string"
          },
          "etag": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "kind": {
            "type": "string"
          },
          "nextPageToken": {
            "type": "string"
          },
          "nextSyncToken": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "updated": {
            "$ref": "#/components/schemas/DateTime"
          },
          "factory": {
            "$ref": "#/components/schemas/JsonFactory"
          },
          "unknownKeys": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "field": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "modifiers": {
                "type": "integer",
                "format": "int32"
              },
              "synthetic": {
                "type": "boolean"
              },
              "declaredAnnotations": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "accessible": {
                "type": "boolean",
                "deprecated": true
              },
              "genericType": {
                "type": "object",
                "properties": {
                  "typeName": {
                    "type": "string"
                  }
                }
              },
              "enumConstant": {
                "type": "boolean"
              },
              "annotatedType": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "declaredAnnotations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "type": {
                    "type": "object",
                    "properties": {
                      "typeName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "annotations": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "primitive": {
            "type": "boolean"
          },
          "genericType": {
            "type": "object",
            "properties": {
              "typeName": {
                "type": "string"
              }
            }
          },
          "final": {
            "type": "boolean"
          },
          "classInfo": {
            "$ref": "#/components/schemas/ClassInfo"
          },
          "tersMethodForField": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "modifiers": {
                  "type": "integer",
                  "format": "int32"
                },
                "typeParameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "annotatedBounds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "declaredAnnotations": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "type": {
                              "type": "object",
                              "properties": {
                                "typeName": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "bounds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "typeName": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "typeName": {
                        "type": "string"
                      },
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "synthetic": {
                  "type": "boolean"
                },
                "declaredAnnotations": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "accessible": {
                  "type": "boolean",
                  "deprecated": true
                },
                "varArgs": {
                  "type": "boolean"
                },
                "parameterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "parameterAnnotations": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                },
                "genericParameterTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "typeName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "genericExceptionTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "typeName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "default": {
                  "type": "boolean"
                },
                "genericReturnType": {
                  "type": "object",
                  "properties": {
                    "typeName": {
                      "type": "string"
                    }
                  }
                },
                "bridge": {
                  "type": "boolean"
                },
                "defaultValue": {
                  "type": "object"
                },
                "annotatedReturnType": {
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "declaredAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "type": {
                      "type": "object",
                      "properties": {
                        "typeName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "annotatedParameterTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "type": {
                        "type": "object",
                        "properties": {
                          "typeName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "modifiers": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "synthetic": {
                        "type": "boolean"
                      },
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "annotatedType": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "declaredAnnotations": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "type": {
                            "type": "object",
                            "properties": {
                              "typeName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "parameterizedType": {
                        "type": "object",
                        "properties": {
                          "typeName": {
                            "type": "string"
                          }
                        }
                      },
                      "varArgs": {
                        "type": "boolean"
                      },
                      "namePresent": {
                        "type": "boolean"
                      },
                      "declaringExecutable": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "modifiers": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "typeParameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "genericDeclaration": {
                                  "type": "object"
                                },
                                "annotatedBounds": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "annotations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "declaredAnnotations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "type": {
                                        "type": "object",
                                        "properties": {
                                          "typeName": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "bounds": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "typeName": {
                                  "type": "string"
                                },
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "declaredAnnotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          },
                          "synthetic": {
                            "type": "boolean"
                          },
                          "declaredAnnotations": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "varArgs": {
                            "type": "boolean"
                          },
                          "annotatedParameterTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "declaredAnnotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "type": {
                                  "type": "object",
                                  "properties": {
                                    "typeName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "parameterCount": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "parameterAnnotations": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          },
                          "genericParameterTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "typeName": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "genericExceptionTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "typeName": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "annotatedReturnType": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "declaredAnnotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "type": {
                                "type": "object",
                                "properties": {
                                  "typeName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "annotatedReceiverType": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "declaredAnnotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "type": {
                                "type": "object",
                                "properties": {
                                  "typeName": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "annotatedExceptionTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "declaredAnnotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "type": {
                                  "type": "object",
                                  "properties": {
                                    "typeName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "annotations": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "accessible": {
                            "type": "boolean",
                            "deprecated": true
                          }
                        }
                      },
                      "implicit": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "annotatedReceiverType": {
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "declaredAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "type": {
                      "type": "object",
                      "properties": {
                        "typeName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "annotatedExceptionTypes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "type": {
                        "type": "object",
                        "properties": {
                          "typeName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "annotations": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "JsonFactory": {
        "type": "object"
      },
      "FacilityPageResponseDTO": {
        "type": "object"
      },
      "ChatParticipantResponseDTO": {
        "type": "object",
        "properties": {
          "participantId": {
            "type": "integer",
            "description": "참가자 ID",
            "format": "int64",
            "example": 12345
          },
          "userId": {
            "type": "string",
            "description": "유저 ID",
            "example": "user123"
          }
        },
        "description": "채팅방 참가자 응답 DTO"
      },
      "Activity": {
        "type": "object",
        "properties": {
          "activity_Id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "currentParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "meetingBoard": {
            "$ref": "#/components/schemas/MeetingBoard"
          },
          "participants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParticipants"
            }
          }
        }
      },
      "ActivityParticipants": {
        "type": "object",
        "properties": {
          "participantId": {
            "type": "integer",
            "format": "int64"
          },
          "activity": {
            "$ref": "#/components/schemas/Activity"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "role": {
            "type": "string",
            "enum": ["ADMIN", "USER"]
          }
        }
      },
      "ChatParticipant": {
        "type": "object",
        "properties": {
          "participantId": {
            "type": "integer",
            "format": "int64"
          },
          "chatRoom": {
            "$ref": "#/components/schemas/ChatRoom"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["HOST", "MEMBER"]
          },
          "host": {
            "type": "boolean"
          }
        }
      },
      "ChatRoom": {
        "type": "object",
        "properties": {
          "chatRoomId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["GROUP", "PRIVATE"]
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "chatParticipants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatParticipant"
            }
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "MeetingBoard": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "integer",
            "format": "int64"
          },
          "sportType": {
            "type": "string",
            "enum": [
              "BADMINTON",
              "BASEBALL",
              "BASKETBALL",
              "SOCCER",
              "SWIMMING",
              "TENNIS"
            ]
          },
          "mbTitle": {
            "type": "string"
          },
          "mbContent": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "mbLocation": {
            "type": "string"
          },
          "mbHost": {
            "$ref": "#/components/schemas/User"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "mbCreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "mbLastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "mbDeletedDate": {
            "type": "string",
            "format": "date-time"
          },
          "activity": {
            "$ref": "#/components/schemas/Activity"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "messageId": {
            "type": "integer",
            "format": "int64"
          },
          "chatRoom": {
            "$ref": "#/components/schemas/ChatRoom"
          },
          "participant": {
            "$ref": "#/components/schemas/ChatParticipant"
          },
          "content": {
            "type": "string"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "notification_Id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "notificationTitleType": {
            "type": "string",
            "enum": [
              "CHAT_NEW_MESSAGE",
              "ACTIVITY_REMINDER",
              "ACTIVITY_INVITED",
              "ACTIVITY_PARTICIPATE"
            ]
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "read": {
            "type": "boolean"
          }
        }
      },
      "Oauth": {
        "type": "object",
        "properties": {
          "oauthId": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "provider": {
            "type": "string"
          },
          "providerId": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "profilePath": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["ADMIN", "USER", "SUPER_ADMIN"]
          },
          "nickname": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "oauthList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Oauth"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "fcmToken": {
            "type": "string"
          },
          "googleCalenderId": {
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "activityParticipants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityParticipants"
            }
          },
          "chatParticipants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatParticipant"
            }
          },
          "id": {
            "type": "string"
          },
          "new": {
            "type": "boolean"
          }
        }
      },
      "AdminCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
