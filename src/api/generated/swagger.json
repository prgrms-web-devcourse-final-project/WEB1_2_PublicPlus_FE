{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "PublicPlus",
    "description" : "공공체육시설 활성화 사이트 공공플러스입니다!",
    "contact" : {
      "name" : "데브코스 통합 파이널 프로젝트 11팀 00+ 백엔드 깃허브 채널",
      "url" : "https://github.com/prgrms-web-devcourse-final-project/WEB1_2_PublicPlus_BE"
    },
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "Generated server url"
  } ],
  "security" : [ {
    "BearerAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "FacilityController",
    "description" : "시설 검색정보, 상세정보를 다루는 API입니다."
  }, {
    "name" : "EmailController",
    "description" : "이메일 인증메일을 보내거나 이메일에 대한 확인 검증을 합니다"
  }, {
    "name" : "UserController",
    "description" : "사용자 관련 처리를 하는 컨트롤러입니다(회원가입,로그인,로그아웃,토큰 등등)"
  }, {
    "name" : "OAuth2Controller",
    "description" : "소셜 로그인 기능을 이용해 로그인합니다(스웨거로는 테스트 불가)"
  } ],
  "paths" : {
    "/api/meetingboard/{mbId}" : {
      "get" : {
        "tags" : [ "meeting-board-controller" ],
        "operationId" : "getMeetingBoardById",
        "parameters" : [ {
          "name" : "mbId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "meeting-board-controller" ],
        "operationId" : "updateMeetingBoard",
        "parameters" : [ {
          "name" : "mbId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeetingBoardRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "meeting-board-controller" ],
        "operationId" : "deleteMeetingBoard",
        "parameters" : [ {
          "name" : "mbId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/google-calendar/event" : {
      "put" : {
        "tags" : [ "event-controller" ],
        "operationId" : "updateEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityUpdateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "event-controller" ],
        "operationId" : "createEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityCreateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-details/{facilityId}/reviews/{reviewId}" : {
      "put" : {
        "tags" : [ "ReviewController" ],
        "summary" : "시설 리뷰 수정",
        "description" : "특정 리뷰의 내용을 수정합니다.",
        "parameters" : [ {
          "name" : "facilityId",
          "in" : "path",
          "description" : "시설 ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "리뷰 ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "수정할 리뷰 정보",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "성공",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewDTO"
                }
              }
            }
          }
        },
        "x-content-type" : "application/json",
        "x-accepts" : [ "application/json" ]
      },
      "delete" : {
        "tags" : [ "ReviewController" ],
        "summary" : "시설 리뷰 삭제",
        "description" : "특정 리뷰를 삭제합니다.",
        "parameters" : [ {
          "name" : "facilityId",
          "in" : "path",
          "description" : "시설 ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reviewId",
          "in" : "path",
          "description" : "리뷰 ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "성공",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "x-accepts" : [ "application/json" ]
      }
    },
    "/api/facility-detail/{facilityId}" : {
      "get" : {
        "tags" : [ "FacilityController" ],
        "summary" : "시설 상세 정보 페이지 조회",
        "description" : "시설 ID로 상세 정보를 조회합니다.",
        "operationId" : "readFacilityDetails",
        "parameters" : [ {
          "name" : "facilityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "성공적으로 시설 상세 정보를 조회했습니다.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityDetailsResponseDTO"
                }
              }
            }
          },
          "404" : {
            "description" : "시설을 찾을 수 없습니다.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityDetailsResponseDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FacilityController" ],
        "summary" : "시설 상세 정보 업데이트",
        "description" : "시설 상세 정보를 업데이트합니다.",
        "operationId" : "updateFacilityDetail",
        "parameters" : [ {
          "name" : "facilityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FacilityDetailsUpdateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "성공적으로 시설 상세 정보가 업데이트되었습니다.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityDetailsResponseDTO"
                },
                "example" : {
                  "facilityId" : "S210401100008601453",
                  "facilityName" : "○ [평일] (주간) 마포 난지천 인조잔디축구장 (업데이트)",
                  "facilityCategory" : "FOOTBALL_FIELD",
                  "area" : "마포구",
                  "priceType" : true,
                  "facilityImage" : "https://example.com/image.jpg",
                  "reservationStartDate" : "2024-11-27T01:44:05.959Z",
                  "reservationEndDate" : "2024-11-27T01:44:05.959Z",
                  "facilityNumber" : "02-3153-9874",
                  "reservationURL" : "https://example.com/reserve",
                  "facilityLocation" : "서울특별시 산악문화체험센터>난지천인조잔디축구장",
                  "facilityDescription" : "1. 공공시설 예약서비스 이용시 필수 준수사항...",
                  "serviceStartDate" : "2024-01-01",
                  "serviceEndDate" : "2024-12-31"
                }
              }
            }
          },
          "400" : {
            "description" : "업데이트 실패",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseDTO"
                },
                "example" : {
                  "message" : "Invalid input data"
                }
              }
            }
          },
          "404" : {
            "description" : "시설을 찾을 수 없습니다.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseDTO"
                },
                "example" : {
                  "message" : "Facility not found"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "FacilityController" ],
        "summary" : "시설 상세 정보 삭제",
        "description" : "시설 상세 정보를 삭제합니다.",
        "operationId" : "deleteFacilityDetail",
        "parameters" : [ {
          "name" : "facilityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "성공적으로 시설 상세 정보가 삭제되었습니다.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "삭제 실패",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "시설을 찾을 수 없습니다.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/activity/{activityId}" : {
      "get" : {
        "tags" : [ "activity-controller" ],
        "operationId" : "getActivity",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "activity-controller" ],
        "operationId" : "updateActivity",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityUpdateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "activity-controller" ],
        "operationId" : "deleteActivity",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendar/{summary}" : {
      "post" : {
        "tags" : [ "calendar-controller" ],
        "operationId" : "createCalendar",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/refresh/header" : {
      "post" : {
        "tags" : [ "UserController" ],
        "summary" : "토큰 재발급",
        "description" : "HTTP헤더에 담긴 refresh_token을 이용해 access_token을 재발급합니다",
        "operationId" : "resignAccessTokenByHeader",
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JwtToken"
                },
                "example" : {
                  "authentication" : "Bearer",
                  "access_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "refresh_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "userId" : "sda1fsd3-ds6au-fs3fds5"
                }
              }
            }
          },
          "400" : {
            "description" : "토큰이 만료되거나, refresh_token이 아닌 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "유효하지 않은 토큰입니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/refresh/cookie" : {
      "post" : {
        "tags" : [ "UserController" ],
        "summary" : "토큰 재발급",
        "description" : "(현재미구현)쿠키에 담긴 refresh토큰을 이용해 access토큰을 재발급합니다",
        "operationId" : "resignAccessTokenByCookie",
        "parameters" : [ {
          "name" : "refresh_token",
          "in" : "cookie",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JwtToken"
                },
                "example" : {
                  "authentication" : "Bearer",
                  "access_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "refresh_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "userId" : "sda1fsd3-ds6au-fs3fds5"
                }
              }
            }
          },
          "400" : {
            "description" : "토큰이 만료되거나, refresh_token이 아닌 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "유효하지 않은 토큰입니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/profile/{userId}" : {
      "post" : {
        "tags" : [ "UserController" ],
        "summary" : "프로필 사진 변경",
        "description" : "UserId를 이용해 프로필 사진을 변경합니다",
        "operationId" : "changeProfile",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/profile_userId_body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "프로필 사진 변경 완료"
                }
              }
            }
          },
          "400" : {
            "description" : "이미지 파일이 아니거나, 파일을 첨부하지 않았을 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "파일이 존재하지 않거나, 파일타입이 맞지 않습니다"
                }
              }
            }
          },
          "500" : {
            "description" : "파일 경로 설정에 문제가 생겼을 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_GATEWAY",
                  "message" : "디렉토리 설정이 실패했습니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/password/{userId}" : {
      "post" : {
        "tags" : [ "UserController" ],
        "summary" : "비밀번호 변경",
        "description" : "UserId를 이용해 비밀번호를 변경합니다",
        "operationId" : "changePassword",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChangePasswordDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "비밀번호 변경 완료"
                }
              }
            }
          },
          "400" : {
            "description" : "비밀번호 재확인 로직을 통과하지 못했을 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "암호가 일치하지 않습니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/login" : {
      "post" : {
        "tags" : [ "UserController" ],
        "summary" : "로그인",
        "description" : "이메일, 암호를 입력하여 로그인합니다",
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserLoginDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JwtToken"
                },
                "example" : {
                  "authentication" : "Bearer",
                  "access_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "refresh_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "userId" : "sda1fsd3-ds6au-fs3fds5"
                }
              }
            }
          },
          "400" : {
            "description" : "입력한 이메일이나 암호가 회원 확인 로직을 통과하지 못했을 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "암호가 일치하지 않습니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/join" : {
      "post" : {
        "tags" : [ "UserController" ],
        "summary" : "회원가입",
        "description" : "이메일, 암호, 닉네임을 입력하여 회원가입을 합니다",
        "operationId" : "join",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserJoinDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "비밀번호 확인 로직을 통과하지 못했을 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "암호가 일치하지 않습니다"
                }
              }
            }
          }
        }
      }
    },
    "/api/push/send" : {
      "post" : {
        "tags" : [ "push-notification-controller" ],
        "operationId" : "sendPushNotification",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationCreateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/send" : {
      "post" : {
        "tags" : [ "notification-controller" ],
        "operationId" : "sendPushNotification_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/meetingboard" : {
      "get" : {
        "tags" : [ "meeting-board-controller" ],
        "operationId" : "getAllMeetingBoards",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "meeting-board-controller" ],
        "operationId" : "createMeetingBoard",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MeetingBoardRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/fcm" : {
      "post" : {
        "tags" : [ "fcm-controller" ],
        "operationId" : "handleFcmToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserLoginDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-details/{facilityId}/reviews" : {
      "get" : {
        "tags" : [ "ReviewController" ],
        "summary" : "시설 리뷰 조회",
        "description" : "특정 시설에 대한 내부 및 외부 리뷰를 조회합니다.",
        "parameters" : [ {
          "name" : "facilityId",
          "in" : "path",
          "description" : "시설 ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "성공",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityReviewsResponse"
                }
              }
            }
          }
        },
        "x-accepts" : [ "application/json" ]
      },
      "post" : {
        "tags" : [ "ReviewController" ],
        "summary" : "시설 리뷰 생성",
        "description" : "특정 시설에 대한 리뷰를 생성합니다.",
        "parameters" : [ {
          "name" : "facilityId",
          "in" : "path",
          "description" : "시설 ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "생성할 리뷰 정보",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "리뷰 생성 성공",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewDTO"
                }
              }
            }
          }
        },
        "x-content-type" : "application/json",
        "x-accepts" : [ "application/json" ]
      }
    },
    "/api/facility-detail/location" : {
      "post" : {
        "tags" : [ "FacilityController" ],
        "summary" : "위치기반 시설 검색",
        "description" : "주어진 위도, 경도, 반경에 해당하는 시설들을 검색합니다.",
        "operationId" : "searchByLocation",
        "requestBody" : {
          "description" : "위치 정보와 반경을 포함한 검색 요청 데이터",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FacilityLocationDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "성공적으로 시설 목록을 반환",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                },
                "example" : {
                  "totalElements" : 2,
                  "totalPages" : 1,
                  "size" : 5,
                  "content" : [ {
                    "facilityId" : "S241010135430829736",
                    "facilityName" : "서울대공원 리틀야구장",
                    "facilityCategory" : "BASEBALL_FIELD",
                    "area" : "과천시",
                    "priceType" : false,
                    "facilityImage" : "https://example.com/image1.jpg",
                    "reservationStartDate" : "2024-10-14T10:00:00",
                    "reservationEndDate" : "2024-10-16T16:00:00"
                  }, {
                    "facilityId" : "S241010135430829737",
                    "facilityName" : "서울대공원 풋살장",
                    "facilityCategory" : "FOOTBALL_FIELD",
                    "area" : "과천시",
                    "priceType" : true,
                    "facilityImage" : "https://example.com/image2.jpg",
                    "reservationStartDate" : "2024-10-15T10:00:00",
                    "reservationEndDate" : "2024-10-17T16:00:00"
                  } ],
                  "number" : 0,
                  "sort" : [ {
                    "direction" : "ASC",
                    "nullHandling" : "NATIVE",
                    "ascending" : true,
                    "property" : "facilityName",
                    "ignoreCase" : true
                  } ],
                  "first" : true,
                  "last" : true,
                  "numberOfElements" : 2,
                  "pageable" : {
                    "offset" : 0,
                    "sort" : [ {
                      "direction" : "ASC",
                      "nullHandling" : "NATIVE",
                      "ascending" : true,
                      "property" : "facilityName",
                      "ignoreCase" : true
                    } ],
                    "paged" : true,
                    "pageSize" : 5,
                    "pageNumber" : 0,
                    "unpaged" : false
                  },
                  "empty" : false
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/filter" : {
      "post" : {
        "tags" : [ "FacilityController" ],
        "summary" : "시설 필터링 검색",
        "description" : "시설 검색정보를 여러 조건으로 필터링하여 조회합니다.",
        "operationId" : "facilityFilter",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FacilityFilterDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "필터링된 시설 목록 조회 성공",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageFacilityResponseDTO"
                }
              }
            }
          },
          "400" : {
            "description" : "필터링 에러",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponseDTO"
                },
                "example" : {
                  "message" : "Invalid input data"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/all-memory" : {
      "post" : {
        "tags" : [ "FacilityController" ],
        "summary" : "모든 시설 상세 정보 저장",
        "description" : "서울시 공공 서비스예약의 모든 시설 데이터를 API를 통해 가져와서 저장합니다.",
        "operationId" : "addAllFacilityDetails",
        "responses" : {
          "200" : {
            "description" : "성공적으로 모든 시설 상세 정보를 저장했습니다.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "데이터 수집에 실패했습니다.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/email" : {
      "get" : {
        "tags" : [ "EmailController" ],
        "summary" : "검증",
        "description" : "보낸 코드값이 서버의 저장값과 일치하는지 확인합니다",
        "operationId" : "verifyCode",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "인증번호를 보낸 email 주소",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "description" : "인증번호를 보낸 email 주소",
            "example" : "example@example.com"
          },
          "example" : "example@example.com"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "받은 인증번호",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "description" : "받은 인증번호",
            "example" : "123456"
          },
          "example" : 123456
        } ],
        "responses" : {
          "200" : {
            "description" : "인증 성공",
            "content" : {
              "application/json" : {
                "example" : {
                  "httpStatus" : "OK",
                  "message" : "인증 성공"
                }
              }
            }
          },
          "400" : {
            "description" : "인증 실패 : 인증번호 불일치",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "인증번호가 일치하지 않습니다"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "EmailController" ],
        "summary" : "이메일 발송",
        "description" : "이메일 인증을 위한 코드를 발송합니다",
        "operationId" : "sendCode",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "인증번호를 보낼 email 주소",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "description" : "인증번호를 보낼 email 주소",
            "example" : "example@example.com"
          },
          "example" : "example@example.com"
        } ],
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "example" : {
                  "httpStatus" : "OK",
                  "message" : "발송 완료"
                }
              }
            }
          },
          "400" : {
            "description" : "이미 인증을 보낸 메일일 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "이미 인증을 요청한 메일입니다"
                }
              }
            }
          },
          "500" : {
            "description" : "서버에서 메일 전송이 실패할 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "INTERVAL_SERVER_ERROR",
                  "message" : "메일 전송에 실패했습니다."
                }
              }
            }
          }
        }
      }
    },
    "/api/activity" : {
      "post" : {
        "tags" : [ "activity-controller" ],
        "operationId" : "createActivity",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivityCreateDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/nickname/{userId}" : {
      "patch" : {
        "tags" : [ "UserController" ],
        "summary" : "닉네임 변경",
        "description" : "UserId를 이용해 닉네임을 변경합니다(도메인 규칙 : 2~10자 사이의 한글,영어소문자,숫자만)",
        "operationId" : "updateNickname",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserChangeInfoDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "닉네임 변경 완료"
                }
              }
            }
          },
          "400" : {
            "description" : "닉네임 변경 규칙을 지키지 않았을 경우",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                },
                "example" : {
                  "httpStatus" : "BAD_REQUEST",
                  "message" : "닉네임을 다시 설정해주세요"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/description/{userId}" : {
      "patch" : {
        "tags" : [ "UserController" ],
        "summary" : "소개글 변경",
        "description" : "UserId를 이용해 소개글을 변경합니다",
        "operationId" : "updateDescription",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserChangeInfoDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "소개글 수정 완료"
                }
              }
            }
          }
        }
      }
    },
    "/tags" : {
      "get" : {
        "tags" : [ "tag-controller" ],
        "operationId" : "getTags",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TagDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/calendars" : {
      "get" : {
        "tags" : [ "calendar-controller" ],
        "operationId" : "listCalendars",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{userId}" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "회원 정보 조회",
        "description" : "UserId를 이용해 회원정보를 조회합니다",
        "operationId" : "findMyInformation",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDTO"
                },
                "example" : {
                  "userId" : "adf2ds3-das4fs2daf-ds4a3fn23",
                  "email" : "example@example.com",
                  "profile_image" : "이미지 주소가 들어갈 예정입니다",
                  "nickname" : "만득이",
                  "description" : "안녕하세요. 반갑습니다",
                  "role" : "USER"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserController" ],
        "summary" : "회원 탈퇴",
        "description" : "UserId를 이용해 회원정보를 삭제합니다",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "회원 탈퇴 완료"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/logout" : {
      "get" : {
        "tags" : [ "UserController" ],
        "summary" : "로그아웃",
        "description" : "로그아웃을 합니다.",
        "operationId" : "logout",
        "responses" : {
          "204" : {
            "description" : "로그아웃 완료"
          }
        }
      }
    },
    "/api/oauth2/{provider}" : {
      "get" : {
        "tags" : [ "OAuth2Controller" ],
        "summary" : "소셜 로그인",
        "description" : "OAUTH2.0을 통해 로그인합니다",
        "operationId" : "OauthLogin",
        "parameters" : [ {
          "name" : "provider",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "정상 반환",
            "content" : {
              "application/json" : {
                "example" : {
                  "bearer" : "Bearer",
                  "access_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "refresh_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                  "userId" : "sda1fsd3-ds6au-fs3fds5"
                }
              }
            }
          }
        }
      }
    },
    "/api/google-calendar/event/events" : {
      "get" : {
        "tags" : [ "event-controller" ],
        "operationId" : "listEvents",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Events"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail" : {
      "get" : {
        "tags" : [ "FacilityController" ],
        "summary" : "시설 상세 정보 가져오기",
        "description" : "시설의 이름으로 상세 정보를 가져옵니다.",
        "operationId" : "getFacilityDetail",
        "parameters" : [ {
          "name" : "facilityName",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "성공적으로 데이터를 가져왔습니다.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "시설을 찾을 수 없습니다.",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/list" : {
      "get" : {
        "tags" : [ "FacilityController" ],
        "summary" : "시설 목록 페이지 조회",
        "description" : "모든 시설 목록을 페이지 단위로 조회합니다.",
        "operationId" : "getAllFacilities",
        "responses" : {
          "200" : {
            "description" : "시설 목록 조회 성공",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacilityPageResponseDTO"
                },
                "example" : {
                  "content" : [ {
                    "facilityId" : "S210401100008601453",
                    "facilityName" : "마포 난지천 인조잔디축구장",
                    "area" : "마포구",
                    "facilityCategory" : "FOOTBALL_FIELD",
                    "reservationStartDate" : "2024-11-27T01:44:05.959Z",
                    "reservationEndDate" : "2024-11-27T01:44:05.959Z"
                  }, {
                    "facilityId" : "S210401100008601454",
                    "facilityName" : "강동구 실내 배드민턴장",
                    "area" : "강동구",
                    "facilityCategory" : "BADMINTON_COURT",
                    "reservationStartDate" : "2024-11-28T01:44:05.959Z",
                    "reservationEndDate" : "2024-11-28T01:44:05.959Z"
                  } ],
                  "pageable" : {
                    "pageNumber" : 0,
                    "pageSize" : 10,
                    "sort" : {
                      "sorted" : true,
                      "unsorted" : false,
                      "empty" : false
                    }
                  },
                  "totalElements" : 200,
                  "totalPages" : 20,
                  "last" : false,
                  "first" : true,
                  "size" : 10,
                  "number" : 0,
                  "sort" : {
                    "sorted" : true,
                    "unsorted" : false,
                    "empty" : false
                  },
                  "numberOfElements" : 10
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/details" : {
      "get" : {
        "tags" : [ "FacilityController" ],
        "summary" : "시설 상세 정보 목록 조회",
        "description" : "모든 시설 상세 정보를 페이지 단위로 조회합니다.",
        "operationId" : "getAllFacilityDetails",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageFacilityDetailsResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/google-calendar/event/eventId" : {
      "delete" : {
        "tags" : [ "event-controller" ],
        "operationId" : "deleteEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/facility-detail/all" : {
      "delete" : {
        "tags" : [ "FacilityController" ],
        "operationId" : "deleteAll",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "LocalTime" : {
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nano" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MeetingBoardRequestDTO" : {
        "required" : [ "maxParticipants", "mbContent", "mbDate", "mbHost", "mbLocation", "mbTime", "mbTitle", "sportType" ],
        "type" : "object",
        "properties" : {
          "sportType" : {
            "type" : "string",
            "enum" : [ "BADMINTON", "BASEBALL", "BASKETBALL", "SOCCER", "SWIMMING", "TENNIS" ]
          },
          "mbTitle" : {
            "type" : "string"
          },
          "mbContent" : {
            "maxLength" : 500,
            "minLength" : 0,
            "type" : "string"
          },
          "mbDate" : {
            "type" : "string",
            "format" : "date"
          },
          "mbTime" : {
            "$ref" : "#/components/schemas/LocalTime"
          },
          "mbLocation" : {
            "type" : "string"
          },
          "mbHost" : {
            "type" : "string"
          },
          "maxParticipants" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ActivityUpdateDTO" : {
        "type" : "object",
        "properties" : {
          "activityId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string"
          },
          "eventId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string"
          },
          "endTime" : {
            "type" : "string"
          },
          "googleCalenderId" : {
            "type" : "string"
          },
          "maxAttendees" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ReviewDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "facilityId" : {
            "type" : "string"
          },
          "content" : {
            "type" : "string"
          },
          "rating" : {
            "type" : "number"
          },
          "likes" : {
            "type" : "integer"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "example" : {
          "createdAt" : "2000-01-23T04:56:07.000+00:00",
          "facilityId" : "facilityId",
          "rating" : 6.027456183070403,
          "id" : 0,
          "content" : "content",
          "likes" : 1,
          "tags" : [ "tags", "tags" ],
          "updatedAt" : "2000-01-23T04:56:07.000+00:00"
        }
      },
      "FacilityDetailsUpdateDTO" : {
        "type" : "object",
        "properties" : {
          "facilityId" : {
            "type" : "string",
            "description" : "시설 고유 ID",
            "example" : "S210401100008601453"
          },
          "facilityName" : {
            "type" : "string",
            "description" : "시설 이름",
            "example" : "○ [평일] (주간) 마포 난지천 인조잔디축구장 (업데이트)"
          },
          "facilityCategory" : {
            "type" : "string",
            "description" : "시설 카테고리",
            "example" : "FOOTBALL_FIELD",
            "enum" : [ "FOOTBALL_FIELD", "FUTSAL_FIELD", "FOOT_VOLLEYBALL_FIELD", "BASEBALL_FIELD", "TENNIS_FIELD", "BASKETBALL_FIELD", "VOLLEYBALL_FIELD", "MULTIPURPOSE_FIELD", "SPORTS_FIELD", "GYM", "BADMINTON_FIELD", "TABLE_TENNIS_FIELD", "EDUCATIONAL_FACILITY", "SWIMMING_POOL", "GOLF_FIELD" ]
          },
          "area" : {
            "type" : "string",
            "description" : "시설 지역",
            "example" : "마포구"
          },
          "priceType" : {
            "type" : "boolean",
            "description" : "무료(true) / 유료(false)",
            "example" : true
          },
          "facilityImage" : {
            "type" : "string",
            "description" : "시설 이미지 URL",
            "example" : "http://example.com/facility.jpg"
          },
          "reservationStartDate" : {
            "type" : "string",
            "description" : "서비스 시작 날짜",
            "format" : "date-time"
          },
          "reservationEndDate" : {
            "type" : "string",
            "description" : "서비스 종료 날짜",
            "format" : "date-time"
          },
          "facilityNumber" : {
            "type" : "string",
            "description" : "시설 전화번호",
            "example" : "02-3153-9874"
          },
          "reservationURL" : {
            "type" : "string",
            "description" : "예약 URL",
            "example" : "http://example.com/reservation"
          },
          "facilityLocation" : {
            "type" : "string",
            "description" : "시설 상세 주소",
            "example" : "서울특별시 산악문화체험센터>난지천인조잔디축구장"
          },
          "facilityDescription" : {
            "type" : "string",
            "description" : "시설 설명",
            "example" : "1. 공공시설 예약서비스 이용시 필수 준수사항..."
          },
          "serviceStartDate" : {
            "type" : "string",
            "description" : "서비스 시작 날짜 (String 형식)",
            "example" : "2024-01-01"
          },
          "serviceEndDate" : {
            "type" : "string",
            "description" : "서비스 종료 날짜 (String 형식)",
            "example" : "2024-12-31"
          }
        }
      },
      "ErrorResponseDTO" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string",
            "description" : "에러 코드"
          },
          "message" : {
            "type" : "string",
            "description" : "에러 메시지"
          },
          "details" : {
            "type" : "string",
            "description" : "에러에 대한 세부 설명"
          }
        }
      },
      "FacilityDetailsResponseDTO" : {
        "type" : "object",
        "properties" : {
          "facilityId" : {
            "type" : "string",
            "description" : "시설 고유 ID",
            "example" : "S210401100008601453"
          },
          "facilityName" : {
            "type" : "string",
            "description" : "시설 이름",
            "example" : "○ [평일] (주간) 마포 난지천 인조잔디축구장"
          },
          "facilityCategory" : {
            "type" : "string",
            "description" : "시설 카테고리",
            "example" : "FOOTBALL_FIELD",
            "enum" : [ "FOOTBALL_FIELD", "FUTSAL_FIELD", "FOOT_VOLLEYBALL_FIELD", "BASEBALL_FIELD", "TENNIS_FIELD", "BASKETBALL_FIELD", "VOLLEYBALL_FIELD", "MULTIPURPOSE_FIELD", "SPORTS_FIELD", "GYM", "BADMINTON_FIELD", "TABLE_TENNIS_FIELD", "EDUCATIONAL_FACILITY", "SWIMMING_POOL", "GOLF_FIELD" ]
          },
          "area" : {
            "type" : "string",
            "description" : "시설 지역",
            "example" : "마포구"
          },
          "priceType" : {
            "type" : "boolean",
            "description" : "무료/유료 여부",
            "example" : true
          },
          "facilityImage" : {
            "type" : "string",
            "description" : "시설 이미지 URL",
            "example" : "https://example.com/image.jpg"
          },
          "reservationStartDate" : {
            "type" : "string",
            "description" : "예약 시작 날짜",
            "format" : "date-time"
          },
          "reservationEndDate" : {
            "type" : "string",
            "description" : "예약 종료 날짜",
            "format" : "date-time"
          },
          "facilityNumber" : {
            "type" : "string",
            "description" : "시설 전화번호",
            "example" : "02-3153-9874"
          },
          "reservationURL" : {
            "type" : "string",
            "description" : "시설 예약 URL",
            "example" : "https://example.com/reserve"
          },
          "facilityLocation" : {
            "type" : "string",
            "description" : "시설 상세 주소",
            "example" : "서울특별시 산악문화체험센터>난지천인조잔디축구장"
          },
          "facilityDescription" : {
            "type" : "string",
            "description" : "시설 설명",
            "example" : "1. 공공시설 예약서비스 이용시 필수 준수사항..."
          },
          "serviceStartDate" : {
            "type" : "string",
            "description" : "서비스 시작 날짜",
            "example" : "2024-01-01"
          },
          "serviceEndDate" : {
            "type" : "string",
            "description" : "서비스 종료 날짜",
            "example" : "2024-12-31"
          },
          "latitude" : {
            "type" : "number",
            "description" : "위도",
            "format" : "double",
            "example" : 37.5741
          },
          "longitude" : {
            "type" : "number",
            "description" : "경도",
            "format" : "double",
            "example" : 126.884
          }
        }
      },
      "ActivityResponseDTO" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "string"
          },
          "endTime" : {
            "type" : "string"
          },
          "maxParticipants" : {
            "type" : "integer",
            "format" : "int32"
          },
          "currentParticipants" : {
            "type" : "integer",
            "format" : "int32"
          },
          "eventId" : {
            "type" : "string"
          }
        }
      },
      "JwtToken" : {
        "type" : "object",
        "properties" : {
          "authentication" : {
            "type" : "string",
            "description" : "인증 통신을 위한 bearer 고정값"
          },
          "access_token" : {
            "type" : "string",
            "description" : "사이트 권한을 위한 access token",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "refresh_token" : {
            "type" : "string",
            "description" : "access token 재발급을 위한 refresh token",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "userId" : {
            "type" : "string",
            "description" : "사용자 고유번호",
            "example" : "sda1fsd3-ds6au-fs3fds5"
          }
        }
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "httpStatus" : {
            "type" : "string",
            "enum" : [ "100 CONTINUE", "101 SWITCHING_PROTOCOLS", "102 PROCESSING", "103 EARLY_HINTS", "103 CHECKPOINT", "200 OK", "201 CREATED", "202 ACCEPTED", "203 NON_AUTHORITATIVE_INFORMATION", "204 NO_CONTENT", "205 RESET_CONTENT", "206 PARTIAL_CONTENT", "207 MULTI_STATUS", "208 ALREADY_REPORTED", "226 IM_USED", "300 MULTIPLE_CHOICES", "301 MOVED_PERMANENTLY", "302 FOUND", "302 MOVED_TEMPORARILY", "303 SEE_OTHER", "304 NOT_MODIFIED", "305 USE_PROXY", "307 TEMPORARY_REDIRECT", "308 PERMANENT_REDIRECT", "400 BAD_REQUEST", "401 UNAUTHORIZED", "402 PAYMENT_REQUIRED", "403 FORBIDDEN", "404 NOT_FOUND", "405 METHOD_NOT_ALLOWED", "406 NOT_ACCEPTABLE", "407 PROXY_AUTHENTICATION_REQUIRED", "408 REQUEST_TIMEOUT", "409 CONFLICT", "410 GONE", "411 LENGTH_REQUIRED", "412 PRECONDITION_FAILED", "413 PAYLOAD_TOO_LARGE", "413 REQUEST_ENTITY_TOO_LARGE", "414 URI_TOO_LONG", "414 REQUEST_URI_TOO_LONG", "415 UNSUPPORTED_MEDIA_TYPE", "416 REQUESTED_RANGE_NOT_SATISFIABLE", "417 EXPECTATION_FAILED", "418 I_AM_A_TEAPOT", "419 INSUFFICIENT_SPACE_ON_RESOURCE", "420 METHOD_FAILURE", "421 DESTINATION_LOCKED", "422 UNPROCESSABLE_ENTITY", "423 LOCKED", "424 FAILED_DEPENDENCY", "425 TOO_EARLY", "426 UPGRADE_REQUIRED", "428 PRECONDITION_REQUIRED", "429 TOO_MANY_REQUESTS", "431 REQUEST_HEADER_FIELDS_TOO_LARGE", "451 UNAVAILABLE_FOR_LEGAL_REASONS", "500 INTERNAL_SERVER_ERROR", "501 NOT_IMPLEMENTED", "502 BAD_GATEWAY", "503 SERVICE_UNAVAILABLE", "504 GATEWAY_TIMEOUT", "505 HTTP_VERSION_NOT_SUPPORTED", "506 VARIANT_ALSO_NEGOTIATES", "507 INSUFFICIENT_STORAGE", "508 LOOP_DETECTED", "509 BANDWIDTH_LIMIT_EXCEEDED", "510 NOT_EXTENDED", "511 NETWORK_AUTHENTICATION_REQUIRED" ]
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "ChangePasswordDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "사용자 이메일",
            "example" : "example@example.com"
          },
          "changePassword" : {
            "type" : "string",
            "description" : "사용자 비밀번호",
            "example" : "password123"
          },
          "checkChangePassword" : {
            "type" : "string",
            "description" : "비밀번호 확인",
            "example" : "password123"
          }
        }
      },
      "UserLoginDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "사용자 이메일",
            "example" : "example@example.com"
          },
          "password" : {
            "type" : "string",
            "description" : "사용자 비밀번호",
            "example" : "password123"
          }
        }
      },
      "UserJoinDTO" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "사용자 이메일",
            "example" : "example@example.com"
          },
          "password" : {
            "type" : "string",
            "description" : "사용자 비밀번호",
            "example" : "password123"
          },
          "checkPassword" : {
            "type" : "string",
            "description" : "비밀번호 확인",
            "example" : "password123"
          },
          "nickname" : {
            "type" : "string",
            "description" : "사용자 닉네임",
            "example" : "만득이"
          }
        },
        "description" : "회원가입 요청 데이터"
      },
      "NotificationCreateDTO" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "body" : {
            "type" : "string"
          }
        }
      },
      "NotificationDTO" : {
        "type" : "object",
        "properties" : {
          "notificationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "title" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          }
        }
      },
      "ActivityCreateDTO" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "모임의 제목",
            "example" : "Weekly Team Meeting"
          },
          "eventId" : {
            "type" : "string",
            "description" : "구글 캘린더의 Event ID",
            "example" : "abc123xyz"
          },
          "description" : {
            "type" : "string",
            "description" : "모임에 대한 설명",
            "example" : "This is our regular weekly meeting to discuss project updates."
          },
          "location" : {
            "type" : "string",
            "description" : "모임 장소",
            "example" : "Seoul Conference Room A"
          },
          "startTime" : {
            "type" : "string",
            "description" : "모임 시작 시간 (ISO 8601 형식)",
            "example" : "2024-11-30T09:00:00"
          },
          "endTime" : {
            "type" : "string",
            "description" : "모임 종료 시간 (ISO 8601 형식)",
            "example" : "2024-11-30T11:00:00"
          },
          "googleCalenderId" : {
            "type" : "string",
            "description" : "구글 캘린더 ID",
            "example" : "primary(기본 캘린더)"
          },
          "maxAttendees" : {
            "type" : "integer",
            "description" : "모임 최대 참석자 수",
            "format" : "int32",
            "example" : 10
          }
        }
      },
      "FacilityLocationDTO" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "description" : "검색할 시설의 위도",
            "format" : "double",
            "example" : 37.436429919747084
          },
          "longitude" : {
            "type" : "number",
            "description" : "검색할 시설의 경도",
            "format" : "double",
            "example" : 127.01409711887952
          },
          "radius" : {
            "type" : "number",
            "description" : "검색할 반경 (킬로미터 단위)",
            "format" : "double",
            "example" : 5
          }
        }
      },
      "Page" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortObject"
            }
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "PageableObject" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortObject"
            }
          },
          "paged" : {
            "type" : "boolean"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unpaged" : {
            "type" : "boolean"
          }
        }
      },
      "SortObject" : {
        "type" : "object",
        "properties" : {
          "direction" : {
            "type" : "string"
          },
          "nullHandling" : {
            "type" : "string"
          },
          "ascending" : {
            "type" : "boolean"
          },
          "property" : {
            "type" : "string"
          },
          "ignoreCase" : {
            "type" : "boolean"
          }
        }
      },
      "FacilityFilterDTO" : {
        "type" : "object",
        "properties" : {
          "facilityName" : {
            "type" : "string",
            "description" : "시설 이름"
          },
          "facilityCategory" : {
            "type" : "string",
            "description" : "시설 카테고리",
            "example" : "축구장",
            "default" : "축구장"
          },
          "area" : {
            "type" : "string",
            "description" : "시설 지역",
            "example" : "마포구",
            "default" : "마포구"
          },
          "priceType" : {
            "type" : "boolean",
            "description" : "시설 가격 유형(무료/유료)",
            "example" : true,
            "default" : true
          }
        }
      },
      "FacilityResponseDTO" : {
        "type" : "object",
        "properties" : {
          "facilityId" : {
            "type" : "string",
            "description" : "시설 ID",
            "example" : "S241010135430829736"
          },
          "facilityName" : {
            "type" : "string",
            "description" : "시설 이름",
            "example" : "서울대공원 리틀야구장 2024. 11월(추첨)"
          },
          "facilityCategory" : {
            "type" : "string",
            "description" : "시설 카테고리",
            "example" : "BASEBALL_FIELD",
            "enum" : [ "FOOTBALL_FIELD", "FUTSAL_FIELD", "FOOT_VOLLEYBALL_FIELD", "BASEBALL_FIELD", "TENNIS_FIELD", "BASKETBALL_FIELD", "VOLLEYBALL_FIELD", "MULTIPURPOSE_FIELD", "SPORTS_FIELD", "GYM", "BADMINTON_FIELD", "TABLE_TENNIS_FIELD", "EDUCATIONAL_FACILITY", "SWIMMING_POOL", "GOLF_FIELD" ]
          },
          "area" : {
            "type" : "string",
            "description" : "시설 지역",
            "example" : "과천시"
          },
          "priceType" : {
            "type" : "boolean",
            "description" : "시설 가격 정보",
            "example" : false
          },
          "facilityImage" : {
            "type" : "string",
            "description" : "시설 이미지 URL",
            "example" : "https://yeyak.seoul.go.kr/web/common/file/FileDown.do?file_id=1728536177983WXNLQGCX4V5595HK8AC80ADS8"
          },
          "reservationStartDate" : {
            "type" : "string",
            "description" : "예약 시작 날짜",
            "format" : "date-time"
          },
          "reservationEndDate" : {
            "type" : "string",
            "description" : "예약 종료 날짜",
            "format" : "date-time"
          }
        }
      },
      "PageFacilityResponseDTO" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FacilityResponseDTO"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortObject"
            }
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "UserDTO" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string",
            "description" : "회원의 고유 ID",
            "example" : "adf2ds3-das4fs2daf-ds4a3fn23"
          },
          "email" : {
            "type" : "string",
            "description" : "회원이 로그인할 ID 역할을 합니다",
            "example" : "example@example.com"
          },
          "profile_image" : {
            "type" : "string",
            "description" : "이미지 주소가 입력됩니다",
            "example" : "c:/user/~~~"
          },
          "nickname" : {
            "type" : "string",
            "description" : "닉네임이 입력됩니다",
            "example" : "만득이"
          },
          "description" : {
            "type" : "string",
            "description" : "소개글 내용이 입력됩니다",
            "example" : "안녕하세요. 반갑습니다"
          },
          "role" : {
            "type" : "string",
            "description" : "권한 정보가 들어갑니다",
            "example" : "USER",
            "enum" : [ "USER", "ADMIN", "SUPER_ADMIN" ]
          }
        }
      },
      "UserChangeInfoDTO" : {
        "type" : "object",
        "properties" : {
          "nickname" : {
            "type" : "string",
            "description" : "변경할 닉네임",
            "example" : "만득이"
          },
          "description" : {
            "type" : "string",
            "description" : "변경할 소개글",
            "example" : "안녕하세요. 반갑습니다."
          }
        }
      },
      "TagDTO" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "ClassInfo" : {
        "type" : "object",
        "properties" : {
          "ignoreCase" : {
            "type" : "boolean"
          },
          "names" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "enum" : {
            "type" : "boolean"
          },
          "fieldInfos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo"
            }
          }
        }
      },
      "DateTime" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "format" : "int64"
          },
          "dateOnly" : {
            "type" : "boolean"
          },
          "timeZoneShift" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EntryPoint" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "accessCode" : {
            "type" : "string"
          },
          "entryPointFeatures" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "entryPointType" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "meetingCode" : {
            "type" : "string"
          },
          "passcode" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "pin" : {
            "type" : "string"
          },
          "regionCode" : {
            "type" : "string"
          },
          "uri" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "anyoneCanAddSelf" : {
            "type" : "boolean"
          },
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventAttachment"
            }
          },
          "attendees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventAttendee"
            }
          },
          "attendeesOmitted" : {
            "type" : "boolean"
          },
          "colorId" : {
            "type" : "string"
          },
          "conferenceData" : {
            "$ref" : "#/components/schemas/Event_conferenceData"
          },
          "created" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "creator" : {
            "$ref" : "#/components/schemas/Event_creator"
          },
          "description" : {
            "type" : "string"
          },
          "end" : {
            "$ref" : "#/components/schemas/Event_end"
          },
          "endTimeUnspecified" : {
            "type" : "boolean"
          },
          "etag" : {
            "type" : "string"
          },
          "extendedProperties" : {
            "$ref" : "#/components/schemas/Event_extendedProperties"
          },
          "gadget" : {
            "$ref" : "#/components/schemas/Event_gadget"
          },
          "guestsCanInviteOthers" : {
            "type" : "boolean"
          },
          "guestsCanModify" : {
            "type" : "boolean"
          },
          "guestsCanSeeOtherGuests" : {
            "type" : "boolean"
          },
          "hangoutLink" : {
            "type" : "string"
          },
          "htmlLink" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "locked" : {
            "type" : "boolean"
          },
          "organizer" : {
            "$ref" : "#/components/schemas/Event_creator"
          },
          "originalStartTime" : {
            "$ref" : "#/components/schemas/Event_end"
          },
          "privateCopy" : {
            "type" : "boolean"
          },
          "recurrence" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "recurringEventId" : {
            "type" : "string"
          },
          "reminders" : {
            "$ref" : "#/components/schemas/Event_reminders"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "source" : {
            "$ref" : "#/components/schemas/Event_source"
          },
          "start" : {
            "$ref" : "#/components/schemas/Event_end"
          },
          "status" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "transparency" : {
            "type" : "string"
          },
          "updated" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "visibility" : {
            "type" : "string"
          },
          "icalUID" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "EventAttachment" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "fileId" : {
            "type" : "string"
          },
          "fileUrl" : {
            "type" : "string"
          },
          "iconLink" : {
            "type" : "string"
          },
          "mimeType" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "EventAttendee" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "additionalGuests" : {
            "type" : "integer",
            "format" : "int32"
          },
          "comment" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "optional" : {
            "type" : "boolean"
          },
          "organizer" : {
            "type" : "boolean"
          },
          "resource" : {
            "type" : "boolean"
          },
          "responseStatus" : {
            "type" : "string"
          },
          "self" : {
            "type" : "boolean"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "EventReminder" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "method" : {
            "type" : "string"
          },
          "minutes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Events" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "accessRole" : {
            "type" : "string"
          },
          "defaultReminders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventReminder"
            }
          },
          "description" : {
            "type" : "string"
          },
          "etag" : {
            "type" : "string"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event"
            }
          },
          "kind" : {
            "type" : "string"
          },
          "nextPageToken" : {
            "type" : "string"
          },
          "nextSyncToken" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "timeZone" : {
            "type" : "string"
          },
          "updated" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "FieldInfo" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "$ref" : "#/components/schemas/FieldInfo_field"
          },
          "name" : {
            "type" : "string"
          },
          "primitive" : {
            "type" : "boolean"
          },
          "genericType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_genericType"
          },
          "final" : {
            "type" : "boolean"
          },
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "tersMethodForField" : {
            "type" : "array",
            "writeOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_tersMethodForField"
            }
          }
        }
      },
      "JsonFactory" : {
        "type" : "object"
      },
      "FacilityPageResponseDTO" : {
        "type" : "object"
      },
      "PageFacilityDetailsResponseDTO" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FacilityDetailsResponseDTO"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortObject"
            }
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "Schema" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Schema1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Schema2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "ExReviewDTO" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "sourceUrl" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "example" : {
          "sourceUrl" : "sourceUrl",
          "createdAt" : "2000-01-23T04:56:07.000+00:00",
          "title" : "title"
        }
      },
      "FacilityReviewsResponse" : {
        "type" : "object",
        "properties" : {
          "internalReviews" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReviewDTO"
            }
          },
          "externalReviews" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExReviewDTO"
            }
          }
        },
        "example" : {
          "internalReviews" : [ {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "facilityId" : "facilityId",
            "rating" : 6.027456183070403,
            "id" : 0,
            "content" : "content",
            "likes" : 1,
            "tags" : [ "tags", "tags" ],
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          }, {
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "facilityId" : "facilityId",
            "rating" : 6.027456183070403,
            "id" : 0,
            "content" : "content",
            "likes" : 1,
            "tags" : [ "tags", "tags" ],
            "updatedAt" : "2000-01-23T04:56:07.000+00:00"
          } ],
          "externalReviews" : [ {
            "sourceUrl" : "sourceUrl",
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "title" : "title"
          }, {
            "sourceUrl" : "sourceUrl",
            "createdAt" : "2000-01-23T04:56:07.000+00:00",
            "title" : "title"
          } ]
        }
      },
      "profile_userId_body" : {
        "type" : "object",
        "properties" : {
          "multipartFile" : {
            "type" : "string",
            "format" : "binary"
          }
        }
      },
      "Event_conferenceData_conferenceSolution_key" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "type" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_conferenceData_conferenceSolution" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "iconUri" : {
            "type" : "string"
          },
          "key" : {
            "$ref" : "#/components/schemas/Event_conferenceData_conferenceSolution_key"
          },
          "name" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_conferenceData_createRequest_status" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "statusCode" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_conferenceData_createRequest" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "conferenceSolutionKey" : {
            "$ref" : "#/components/schemas/Event_conferenceData_conferenceSolution_key"
          },
          "requestId" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/Event_conferenceData_createRequest_status"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_conferenceData_parameters_addOnParameters" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_conferenceData_parameters" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "addOnParameters" : {
            "$ref" : "#/components/schemas/Event_conferenceData_parameters_addOnParameters"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_conferenceData" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "conferenceId" : {
            "type" : "string"
          },
          "conferenceSolution" : {
            "$ref" : "#/components/schemas/Event_conferenceData_conferenceSolution"
          },
          "createRequest" : {
            "$ref" : "#/components/schemas/Event_conferenceData_createRequest"
          },
          "entryPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EntryPoint"
            }
          },
          "notes" : {
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/Event_conferenceData_parameters"
          },
          "signature" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_creator" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "displayName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "self" : {
            "type" : "boolean"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_end" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "date" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "dateTime" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "timeZone" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_extendedProperties" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "shared" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "private" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_gadget" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "display" : {
            "type" : "string"
          },
          "height" : {
            "type" : "integer",
            "format" : "int32"
          },
          "iconLink" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "preferences" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "width" : {
            "type" : "integer",
            "format" : "int32"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_reminders" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "overrides" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventReminder"
            }
          },
          "useDefault" : {
            "type" : "boolean"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "Event_source" : {
        "type" : "object",
        "properties" : {
          "classInfo" : {
            "$ref" : "#/components/schemas/ClassInfo"
          },
          "title" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "factory" : {
            "$ref" : "#/components/schemas/JsonFactory"
          },
          "unknownKeys" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        }
      },
      "FieldInfo_field_genericType" : {
        "type" : "object",
        "properties" : {
          "typeName" : {
            "type" : "string"
          }
        }
      },
      "FieldInfo_field_annotatedType" : {
        "type" : "object",
        "properties" : {
          "annotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "declaredAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "type" : {
            "$ref" : "#/components/schemas/FieldInfo_field_genericType"
          }
        }
      },
      "FieldInfo_field" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "modifiers" : {
            "type" : "integer",
            "format" : "int32"
          },
          "synthetic" : {
            "type" : "boolean"
          },
          "declaredAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "accessible" : {
            "type" : "boolean",
            "deprecated" : true
          },
          "genericType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_genericType"
          },
          "enumConstant" : {
            "type" : "boolean"
          },
          "annotatedType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
          },
          "annotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "FieldInfo_typeParameters" : {
        "type" : "object",
        "properties" : {
          "annotatedBounds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
            }
          },
          "name" : {
            "type" : "string"
          },
          "bounds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_genericType"
            }
          },
          "typeName" : {
            "type" : "string"
          },
          "annotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "declaredAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "FieldInfo_declaringExecutable_typeParameters" : {
        "type" : "object",
        "properties" : {
          "genericDeclaration" : {
            "type" : "object"
          },
          "annotatedBounds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
            }
          },
          "name" : {
            "type" : "string"
          },
          "bounds" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_genericType"
            }
          },
          "typeName" : {
            "type" : "string"
          },
          "annotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "declaredAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      },
      "FieldInfo_declaringExecutable" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "modifiers" : {
            "type" : "integer",
            "format" : "int32"
          },
          "typeParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_declaringExecutable_typeParameters"
            }
          },
          "synthetic" : {
            "type" : "boolean"
          },
          "declaredAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "varArgs" : {
            "type" : "boolean"
          },
          "annotatedParameterTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
            }
          },
          "parameterCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parameterAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "genericParameterTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_genericType"
            }
          },
          "genericExceptionTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_genericType"
            }
          },
          "annotatedReturnType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
          },
          "annotatedReceiverType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
          },
          "annotatedExceptionTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
            }
          },
          "annotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "accessible" : {
            "type" : "boolean",
            "deprecated" : true
          }
        }
      },
      "FieldInfo_parameters" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "modifiers" : {
            "type" : "integer",
            "format" : "int32"
          },
          "synthetic" : {
            "type" : "boolean"
          },
          "annotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "declaredAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "annotatedType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
          },
          "parameterizedType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_genericType"
          },
          "varArgs" : {
            "type" : "boolean"
          },
          "namePresent" : {
            "type" : "boolean"
          },
          "declaringExecutable" : {
            "$ref" : "#/components/schemas/FieldInfo_declaringExecutable"
          },
          "implicit" : {
            "type" : "boolean"
          }
        }
      },
      "FieldInfo_tersMethodForField" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "modifiers" : {
            "type" : "integer",
            "format" : "int32"
          },
          "typeParameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_typeParameters"
            }
          },
          "synthetic" : {
            "type" : "boolean"
          },
          "declaredAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "accessible" : {
            "type" : "boolean",
            "deprecated" : true
          },
          "varArgs" : {
            "type" : "boolean"
          },
          "parameterCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parameterAnnotations" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "genericParameterTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_genericType"
            }
          },
          "genericExceptionTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_genericType"
            }
          },
          "default" : {
            "type" : "boolean"
          },
          "genericReturnType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_genericType"
          },
          "bridge" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "object"
          },
          "annotatedReturnType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
          },
          "annotatedParameterTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
            }
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_parameters"
            }
          },
          "annotatedReceiverType" : {
            "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
          },
          "annotatedExceptionTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FieldInfo_field_annotatedType"
            }
          },
          "annotations" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "BearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}