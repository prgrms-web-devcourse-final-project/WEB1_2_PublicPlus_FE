name: Deploy Next.js SSR to AWS Lambda@Edge and S3

on:
  push:
    branches:
      - develop
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1' # Lambda@Edge는 반드시 us-east-1에 배포해야 함

      - name: Prepare Lambda function
        run: |
          cd .next/standalone
          zip -r ../function.zip ./*
          cd ../..

      - name: Upload ZIP to S3
        run: |
          echo "Uploading function.zip to S3..."
          aws s3 cp .next/function.zip s3://${{ secrets.S3_BUCKET_NAME }}/function.zip
          echo "Upload completed"

      - name: Debug Lambda function name and S3 bucket
        run: |
          echo "Lambda Function Name: ${{ secrets.LAMBDA_FUNCTION_NAME }}"
          echo "S3 Bucket Name: ${{ secrets.S3_BUCKET_NAME }}"

      - name: Deploy to Lambda@Edge
        run: |
          echo "Starting Lambda deployment..."
          echo "Current AWS region: $(aws configure get region)"
          echo "S3 bucket region: $(aws s3api get-bucket-location --bucket ${{ secrets.S3_BUCKET_NAME }})"

          # Try to get S3 object details before updating Lambda
          aws s3api head-object \
            --bucket ${{ secrets.S3_BUCKET_NAME }} \
            --key function.zip || echo "Failed to access S3 object"

          # Update Lambda function with debug output
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --s3-bucket ${{ secrets.S3_BUCKET_NAME }} \
            --s3-key function.zip \
            --debug 2>&1 | tee lambda_update.log

          # Print Lambda function configuration after update
          aws lambda get-function \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --query 'Configuration.[FunctionName,Runtime,Role,Handler]'

      - name: Deploy static files to S3
        run: |
          aws s3 sync .next/static s3://${{ secrets.S3_BUCKET_NAME }}/_next/static --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
